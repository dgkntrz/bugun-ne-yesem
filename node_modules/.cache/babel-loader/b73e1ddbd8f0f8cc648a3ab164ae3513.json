{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neptun\\\\Desktop\\\\github\\\\bugun-ne-yesem\\\\src\\\\pages\\\\icecek.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport \"../App.css\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Slider from '@material-ui/core/Slider';\nimport parse from 'html-react-parser';\nvar storage = window.localStorage;\nconst DEFAULT = \"default_list\";\nlet x = 0;\nlet checkBoxes = [false, false, false, false, false, false, false];\nlet checkList = [\"temel\", \"meyve\", \"alkol\", \"gazlı\", \"tatlıiçecek\", \"kahve\", \"çay\"];\nlet maksimumYemek = 4;\nlet f = 0;\nlet k = 0;\nlet transformString = \"\";\nlet rotating = false;\nlet first = false; // const red = \"#BA181B\";\n\nconst red = \"#000000\";\nconst triangle = \"#2C302E\";\nconst wheel = \"#FFFFFF\";\nconst fieldcolor = \"#D3D3D3\";\nlet default_list = [];\nconst OFFSET = Math.random();\n\nconst map = function (value, in_min, in_max, out_min, out_max) {\n  if (value === 0) {\n    return out_min;\n  }\n\n  return (value - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n};\n\nfunction App() {\n  const r = 200;\n  const cx = 250;\n  const cy = 250;\n  const [list, setList] = useState(default_list);\n  setInterval(() => {\n    const elements = document.getElementsByClassName(\"wheel\");\n    const st = window.getComputedStyle(elements[0], null);\n\n    if (!first) {\n      transformString = st.getPropertyValue(\"transform\");\n      first = true;\n    } else {\n      if (transformString != st.getPropertyValue(\"transform\")) {\n        console.log(\"1\");\n        f = 0;\n        rotating = true;\n        transformString = st.getPropertyValue(\"transform\");\n        k = 0;\n      } else {\n        if (rotating && transformString == st.getPropertyValue(\"transform\")) {\n          rotating = false;\n          f = 1;\n          console.log(\"2\"); // getWinner();\n        }\n      }\n    }\n  }, 400);\n  setInterval(() => {\n    if (!rotating && f == 1) {\n      k = k + 1;\n    } else if (f == 0) {\n      k = 0;\n    }\n\n    if (k == 10) {\n      getWinner();\n      f = 0;\n    }\n  }, 400);\n\n  if (x == 0) {\n    const params = {\n      filters: \"temel-meyve-alkol-gazlı-tatlıiçecek-kahve-çay-\",\n      count: maksimumYemek + \"\"\n    };\n    axios.post('http://172.105.247.10:8080/filtersicecek', params).then(function (response) {\n      default_list = response.data.toString().split(\"/\");\n      setList(default_list);\n      x = 1;\n    });\n  }\n\n  const [power, setPower] = useState(0);\n  const [acc, setAcc] = useState(0);\n  const config = {\n    mass: 50,\n    tension: 200,\n    friction: 200,\n    precision: 0.001\n  };\n  const [props, set] = useSpring(() => ({\n    transform: \"rotate(0deg)\",\n    immediate: false\n  }));\n  useEffect(() => {}, [props]);\n  useEffect(() => {\n    set({\n      from: {\n        transform: `rotate(${map(acc, 0, 100, 0, 1700)}deg)`\n      },\n      transform: `rotate(${map(acc + power, 0, 100, 0, 1700)}deg)`,\n      immediate: false,\n      config\n    });\n    setAcc(acc + power);\n  }, [power]);\n\n  const rederItems = numOfItems => {\n    let items = [];\n\n    for (let i = 0; i < numOfItems; i++) {\n      let xLength = Math.cos(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let yLength = Math.sin(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let txLength = Math.cos(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      let tyLength = Math.sin(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      let divs = \"\";\n\n      for (let k = list[i].length; k < 21; k++) {\n        divs += \"&ensp;\";\n      }\n\n      items.push( /*#__PURE__*/React.createElement(Fragment, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"line\", {\n        stroke: red,\n        strokeWidth: \"2\",\n        x1: cx + xLength,\n        y1: cy + yLength,\n        x2: cx,\n        y2: cy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"text\", {\n        className: \"textstyle2\",\n        x: cx + txLength - 70,\n        y: cy + tyLength + 20,\n        fontSize: \"15px\",\n        transform: `rotate(${((i + 0.5) / numOfItems + OFFSET) * 360} \n                  ${cx + txLength},\n                  ${cy + tyLength})`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }, list[i], \" \", parse(divs))));\n    }\n\n    return items;\n  };\n\n  const boslukEkle = () => {\n    // &ensp;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"\\u2002\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"0px 500px\",\n      gridGap: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    className: \"textstyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, \" Filtreler \"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    className: \"textstyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, \" \\u0130\\xE7erikler \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textstyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"yemek1\",\n    name: \"ingredient1\",\n    value: \"yemek1\",\n    defaultChecked: true,\n    onChange: () => {\n      checkBoxes[0] = !checkBoxes[0];\n\n      if (checkBoxes[0]) {\n        checkList[0] = \"\";\n      } else {\n        checkList[0] = \"temel\";\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"textstyle\",\n    for: \"yemek1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, \"Temel\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"yemek2\",\n    name: \"ingredient2\",\n    value: \"yemek2\",\n    defaultChecked: true,\n    onChange: () => {\n      checkBoxes[1] = !checkBoxes[1];\n\n      if (checkBoxes[1]) {\n        checkList[1] = \"\";\n      } else {\n        checkList[1] = \"meyve\";\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"textstyle\",\n    for: \"yemek2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, \"Meyve\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"yemek3\",\n    name: \"ingredient3\",\n    value: \"yemek3\",\n    defaultChecked: true,\n    onChange: () => {\n      checkBoxes[2] = !checkBoxes[2];\n\n      if (checkBoxes[2]) {\n        checkList[2] = \"\";\n      } else {\n        checkList[2] = \"alkol\";\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"textstyle\",\n    for: \"yemek3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, \"Alkol\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"yemek3\",\n    name: \"ingredient3\",\n    value: \"yemek3\",\n    defaultChecked: true,\n    onChange: () => {\n      checkBoxes[3] = !checkBoxes[3];\n\n      if (checkBoxes[3]) {\n        checkList[3] = \"\";\n      } else {\n        checkList[3] = \"gazlı\";\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"textstyle\",\n    for: \"yemek3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, \"Gazl\\u0131\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"yemek4\",\n    name: \"ingredient4\",\n    value: \"yemek4\",\n    defaultChecked: true,\n    onChange: () => {\n      checkBoxes[4] = !checkBoxes[4];\n\n      if (checkBoxes[4]) {\n        checkList[4] = \"\";\n      } else {\n        checkList[4] = \"tatlıiçecek\";\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"textstyle\",\n    for: \"yemek4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, \"Tatl\\u0131\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"yemek5\",\n    name: \"ingredient5\",\n    value: \"yemek5\",\n    defaultChecked: true,\n    onChange: () => {\n      checkBoxes[5] = !checkBoxes[5];\n\n      if (checkBoxes[5]) {\n        checkList[5] = \"\";\n      } else {\n        checkList[5] = \"kahve\";\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"textstyle\",\n    for: \"yemek5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, \"Kahve\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"yemek6\",\n    name: \"ingredient6\",\n    value: \"yemek6\",\n    defaultChecked: true,\n    onChange: () => {\n      checkBoxes[6] = !checkBoxes[6];\n\n      if (checkBoxes[6]) {\n        checkList[6] = \"\";\n      } else {\n        checkList[6] = \"çay\";\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"textstyle\",\n    for: \"yemek6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, \"\\xC7ay\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 11\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 28\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 45\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 62\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 79\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 96\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 113\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 130\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 147\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 164\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 181\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 198\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 215\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 232\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 249\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 266\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 283\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 300\n    }\n  }, \"\\u2002\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    id: \"discrete-slider-small-steps\",\n    className: \"textstyle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, \"Maksimum \\u0130\\xE7ecek Miktar\\u0131\"), /*#__PURE__*/React.createElement(Slider, {\n    onChange: (e, val) => {\n      maksimumYemek = val;\n    },\n    defaultValue: 4,\n    getAriaValueText: \"\",\n    \"aria-labelledby\": \"discrete-slider-small-steps\",\n    step: 1,\n    marks: true,\n    min: 2,\n    max: 12,\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"secondary\",\n    onClick: () => {\n      let filter = \"\";\n\n      for (let i = 0; i < checkList.length; i++) {\n        if (!checkBoxes[i]) filter += checkList[i] + \"-\";\n      }\n\n      const params = {\n        filters: filter,\n        count: maksimumYemek + \"\"\n      };\n      axios.post('http://172.105.247.10:8080/filtersicecek', params).then(function (response) {\n        if (response.data == \"\") {\n          toast.error(\"Filtrelerinizle eşleşen yemek bulunamadı!\");\n        } else {\n          default_list = response.data.toString().split(\"/\");\n        }\n\n        setList(default_list);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }, \"\\u0130\\xE7ecekleri Yenile\"), /*#__PURE__*/React.createElement(PressButton, {\n    setPower: setPower,\n    style: {\n      height: \"20vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      width: \"100vw\",\n      height: \"80vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    fill: wheel,\n    stroke: red,\n    strokeWidth: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"250\",\n    cy: \"250\",\n    r: r,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(animated.g, {\n    className: \"wheel\",\n    style: {\n      transform: props.transform,\n      transformOrigin: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  }, rederItems(list.length)), /*#__PURE__*/React.createElement(\"g\", {\n    fill: triangle,\n    stroke: triangle,\n    strokeWidth: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"250,70 230,30 270,30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }\n  })));\n}\n\nconst PressButton = ({\n  setPower\n}) => {\n  const [pressed, toggle] = useState(false);\n  const [width, setWidth] = useState(0);\n  const [props, set] = useSpring(() => ({\n    width: \"0%\",\n    backgroundColor: \"hotpink\"\n  }));\n  useEffect(() => {\n    if (pressed) set({\n      from: {\n        width: \"0%\",\n        backgroundColor: \"hotpink\"\n      },\n      to: {\n        width: \"100%\",\n        backgroundColor: \"red\"\n      },\n      immediate: false,\n      config: {\n        duration: 2000\n      }\n    });else {\n      setPower(parseInt(width));\n      set({\n        to: {\n          width: \"0%\",\n          backgroundColor: \"hotpink\"\n        },\n        immediate: true\n      });\n    }\n  }, [pressed]);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"main\",\n    onMouseDown: () => {\n      toggle(!pressed);\n    },\n    onMouseUp: () => {\n      toggle(!pressed);\n    },\n    onTouchStart: () => {\n      toggle(!pressed);\n    },\n    onTouchEnd: () => {\n      toggle(!pressed);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    className: \"fill\",\n    style: {\n      width: props.width,\n      background: props.backgroundColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(animated.div, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }\n  }, props.width.interpolate(x => {\n    setWidth(parseInt(x));\n    return x === \"0%\" ? \"Döndür!\" : parseInt(x) + \"%\";\n  })));\n};\n\nfunction getWinner() {\n  const elements = document.getElementsByClassName(\"textstyle2\");\n  let minY = 3000;\n  let elem = -1;\n\n  for (let i = 0; i < elements.length; i++) {\n    if (elements[i].getBoundingClientRect().y < minY) {\n      minY = elements[i].getBoundingClientRect().y;\n      elem = i;\n    }\n  }\n\n  toast.success(\"Bugünün şanslı içeceği: \" + elements[elem].innerHTML.substring(0, elements[elem].innerHTML.lastIndexOf(\" \")) + \"!\");\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Neptun/Desktop/github/bugun-ne-yesem/src/pages/icecek.js"],"names":["React","Fragment","useState","useEffect","animated","useSpring","axios","ToastContainer","toast","Slider","parse","storage","window","localStorage","DEFAULT","x","checkBoxes","checkList","maksimumYemek","f","k","transformString","rotating","first","red","triangle","wheel","fieldcolor","default_list","OFFSET","Math","random","map","value","in_min","in_max","out_min","out_max","App","r","cx","cy","list","setList","setInterval","elements","document","getElementsByClassName","st","getComputedStyle","getPropertyValue","console","log","getWinner","params","filters","count","post","then","response","data","toString","split","power","setPower","acc","setAcc","config","mass","tension","friction","precision","props","set","transform","immediate","from","rederItems","numOfItems","items","i","xLength","cos","PI","yLength","sin","txLength","tyLength","divs","length","push","boslukEkle","display","gridTemplateColumns","gridGap","e","val","filter","error","height","width","transformOrigin","PressButton","pressed","toggle","setWidth","backgroundColor","to","duration","parseInt","background","interpolate","minY","elem","getBoundingClientRect","y","success","innerHTML","substring","lastIndexOf"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport \"../App.css\";\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport parse from 'html-react-parser';\r\n\r\n\r\nvar storage = window.localStorage;\r\n\r\nconst DEFAULT = \"default_list\";\r\nlet x = 0;\r\nlet checkBoxes = [false, false, false, false, false, false, false];\r\nlet checkList = [\"temel\", \"meyve\", \"alkol\", \"gazlı\", \"tatlıiçecek\", \"kahve\", \"çay\"];\r\n\r\nlet maksimumYemek = 4;\r\nlet f = 0;\r\nlet k = 0;\r\nlet transformString = \"\";\r\nlet rotating = false;\r\nlet first = false;\r\n// const red = \"#BA181B\";\r\nconst red = \"#000000\";\r\nconst triangle = \"#2C302E\"\r\nconst wheel = \"#FFFFFF\"\r\nconst fieldcolor = \"#D3D3D3\"\r\n\r\n\r\nlet default_list =  [\r\n\r\n];\r\n\r\nconst OFFSET = Math.random();\r\n\r\nconst map = function (value, in_min, in_max, out_min, out_max) {\r\n  if (value === 0) {\r\n    return out_min;\r\n  }\r\n  return ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\r\n};\r\n\r\nfunction App() {\r\n  const r = 200;\r\n  const cx = 250;\r\n  const cy = 250;\r\n  const [list, setList] = useState(default_list);\r\n  setInterval(() => {\r\n    const elements = document.getElementsByClassName(\"wheel\");\r\n    const st = window.getComputedStyle(elements[0], null);\r\n    if (!first) {\r\n      transformString = st.getPropertyValue(\"transform\");\r\n      first = true;\r\n    }\r\n    else {\r\n\r\n      if (transformString != st.getPropertyValue(\"transform\")) {\r\n        console.log(\"1\")\r\n        f = 0;\r\n        rotating = true;\r\n        transformString = st.getPropertyValue(\"transform\");\r\n        k = 0;\r\n      }\r\n      else {\r\n        if (rotating && transformString == st.getPropertyValue(\"transform\")) {\r\n          rotating = false;\r\n          f = 1;\r\n          console.log(\"2\")\r\n          // getWinner();\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n  }, 400);\r\n\r\n  setInterval(() => {\r\n    if (!rotating && f == 1) {\r\n      k = k + 1;\r\n    }\r\n    else if (f == 0) {\r\n      k = 0;\r\n    }\r\n    if (k == 10) {\r\n      getWinner();\r\n      f = 0;\r\n    }\r\n  }, 400)\r\n\r\n  if (x == 0) {\r\n    const params = { filters: \"temel-meyve-alkol-gazlı-tatlıiçecek-kahve-çay-\", count: maksimumYemek + \"\" };\r\n    axios.post('http://172.105.247.10:8080/filtersicecek', params)\r\n      .then(function (response) {\r\n\r\n        default_list = response.data.toString().split(\"/\");\r\n        setList(default_list);\r\n        x = 1;\r\n      });\r\n  }\r\n  const [power, setPower] = useState(0);\r\n  const [acc, setAcc] = useState(0);\r\n  const config = { mass: 50, tension: 200, friction: 200, precision: 0.001 };\r\n  const [props, set] = useSpring(() => ({\r\n    transform: \"rotate(0deg)\",\r\n    immediate: false,\r\n  }));\r\n\r\n  useEffect(() => {\r\n\r\n  }, [props])\r\n\r\n  useEffect(() => {\r\n\r\n    set({\r\n      from: { transform: `rotate(${map(acc, 0, 100, 0, 1700)}deg)` },\r\n      transform: `rotate(${map(acc + power, 0, 100, 0, 1700)}deg)`,\r\n      immediate: false,\r\n      config,\r\n    });\r\n    setAcc(acc + power);\r\n  }, [power]);\r\n\r\n  const rederItems = (numOfItems) => {\r\n    let items = [];\r\n    for (let i = 0; i < numOfItems; i++) {\r\n      let xLength = Math.cos(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\r\n      let yLength = Math.sin(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\r\n      let txLength =\r\n        Math.cos(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\r\n      let tyLength =\r\n        Math.sin(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\r\n      let divs = \"\";\r\n\r\n      for (let k = list[i].length; k < 21; k++) {\r\n        divs += \"&ensp;\"\r\n      }\r\n      items.push(\r\n        <Fragment key={i}>\r\n          <line\r\n            stroke={red}\r\n            strokeWidth=\"2\"\r\n            x1={cx + xLength}\r\n            y1={cy + yLength}\r\n            x2={cx}\r\n            y2={cy}\r\n          />\r\n          <text\r\n            className=\"textstyle2\"\r\n            x={cx + txLength - 70}\r\n            y={cy + tyLength + 20}\r\n            fontSize=\"15px\"\r\n            transform={`rotate(${((i + 0.5) / numOfItems + OFFSET) * 360} \r\n                  ${cx + txLength},\r\n                  ${cy + tyLength})`}\r\n          >\r\n            {list[i]} {parse(divs)}\r\n          </text>\r\n        </Fragment>\r\n      );\r\n    }\r\n    return items;\r\n  };\r\n\r\n  const boslukEkle = () => {\r\n    // &ensp;\r\n    return (<>&ensp;</>)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"grid\", gridTemplateColumns: \"0px 500px\", gridGap: 20 }}>\r\n\r\n        <fieldset>\r\n          <legend className=\"textstyle\"> Filtreler </legend>\r\n          <fieldset>\r\n            <legend className=\"textstyle\"> İçerikler </legend>\r\n            <div className=\"textstyle\"></div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek1\" name=\"ingredient1\" value=\"yemek1\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[0] = !checkBoxes[0];\r\n                if (checkBoxes[0]) {\r\n                  checkList[0] = \"\";\r\n                }\r\n                else {\r\n                  checkList[0] = \"temel\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek1\">Temel</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek2\" name=\"ingredient2\" value=\"yemek2\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[1] = !checkBoxes[1];\r\n                if (checkBoxes[1]) {\r\n                  checkList[1] = \"\";\r\n                }\r\n                else {\r\n                  checkList[1] = \"meyve\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek2\">Meyve</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek3\" name=\"ingredient3\" value=\"yemek3\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[2] = !checkBoxes[2];\r\n                if (checkBoxes[2]) {\r\n                  checkList[2] = \"\";\r\n                }\r\n                else {\r\n                  checkList[2] = \"alkol\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek3\">Alkol</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek3\" name=\"ingredient3\" value=\"yemek3\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[3] = !checkBoxes[3];\r\n                if (checkBoxes[3]) {\r\n                  checkList[3] = \"\";\r\n                }\r\n                else {\r\n                  checkList[3] = \"gazlı\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek3\">Gazlı</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek4\" name=\"ingredient4\" value=\"yemek4\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[4] = !checkBoxes[4];\r\n                if (checkBoxes[4]) {\r\n                  checkList[4] = \"\";\r\n                }\r\n                else {\r\n                  checkList[4] = \"tatlıiçecek\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek4\">Tatlı</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek5\" name=\"ingredient5\" value=\"yemek5\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[5] = !checkBoxes[5];\r\n                if (checkBoxes[5]) {\r\n                  checkList[5] = \"\";\r\n                }\r\n                else {\r\n                  checkList[5] = \"kahve\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek5\">Kahve</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek6\" name=\"ingredient6\" value=\"yemek6\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[6] = !checkBoxes[6];\r\n                if (checkBoxes[6]) {\r\n                  checkList[6] = \"\";\r\n                }\r\n                else {\r\n                  checkList[6] = \"çay\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek6\">Çay</label>\r\n            </div>\r\n          </fieldset>\r\n          <div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div>\r\n          <div>\r\n            <label id=\"discrete-slider-small-steps\" className=\"textstyle\">\r\n              Maksimum İçecek Miktarı\r\n            </label>\r\n            <Slider\r\n              onChange={(e, val) => {\r\n                maksimumYemek = val;\r\n              }}\r\n\r\n              defaultValue={4}\r\n              getAriaValueText={\"\"}\r\n              aria-labelledby=\"discrete-slider-small-steps\"\r\n              step={1}\r\n              marks\r\n              min={2}\r\n              max={12}\r\n              valueLabelDisplay=\"auto\"\r\n            />\r\n          </div>\r\n\r\n          <button className=\"secondary\" onClick={() => {\r\n            let filter = \"\";\r\n            for (let i = 0; i < checkList.length; i++) {\r\n              if (!checkBoxes[i])\r\n                filter += checkList[i] + \"-\";\r\n            }\r\n            const params = { filters: filter, count: maksimumYemek + \"\" };\r\n            axios.post('http://172.105.247.10:8080/filtersicecek', params)\r\n              .then(function (response) {\r\n                if (response.data == \"\") {\r\n                  toast.error(\"Filtrelerinizle eşleşen yemek bulunamadı!\");\r\n                }\r\n                else {\r\n                  default_list = response.data.toString().split(\"/\");\r\n                }\r\n                setList(default_list);\r\n              });\r\n          }}>İçecekleri Yenile</button>\r\n          <PressButton setPower={setPower} style={{ height: \"20vh\" }} />\r\n        </fieldset>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 500 500\"\r\n          style={{ width: \"100vw\", height: \"80vh\" }}\r\n        >\r\n          <g fill={wheel} stroke={red} strokeWidth=\"10\">\r\n            <circle cx=\"250\" cy=\"250\" r={r} />\r\n          </g>\r\n          <animated.g\r\n            className={\"wheel\"}\r\n            style={{\r\n              transform: props.transform,\r\n              transformOrigin: \"center\",\r\n            }}\r\n          >\r\n            {rederItems(list.length)}\r\n          </animated.g>\r\n          <g fill={triangle} stroke={triangle} strokeWidth=\"2\">\r\n            <polygon points=\"250,70 230,30 270,30\" />\r\n          </g>\r\n        </svg>\r\n        <ToastContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst PressButton = ({ setPower }) => {\r\n  const [pressed, toggle] = useState(false);\r\n  const [width, setWidth] = useState(0);\r\n  const [props, set] = useSpring(() => ({\r\n    width: \"0%\",\r\n    backgroundColor: \"hotpink\",\r\n  }));\r\n  useEffect(() => {\r\n    if (pressed)\r\n      set({\r\n        from: { width: \"0%\", backgroundColor: \"hotpink\" },\r\n        to: { width: \"100%\", backgroundColor: \"red\" },\r\n        immediate: false,\r\n        config: { duration: 2000 },\r\n      });\r\n    else {\r\n      setPower(parseInt(width));\r\n      set({ to: { width: \"0%\", backgroundColor: \"hotpink\" }, immediate: true });\r\n    }\r\n  }, [pressed]);\r\n\r\n  return (\r\n    <button\r\n      className=\"main\"\r\n      onMouseDown={() => {\r\n        toggle(!pressed);\r\n      }}\r\n      onMouseUp={() => {\r\n        toggle(!pressed);\r\n      }}\r\n      onTouchStart={() => {\r\n        toggle(!pressed);\r\n      }}\r\n      onTouchEnd={() => {\r\n        toggle(!pressed);\r\n      }}\r\n    >\r\n      <animated.div\r\n        className=\"fill\"\r\n        style={{\r\n          width: props.width,\r\n          background: props.backgroundColor,\r\n        }}\r\n      />\r\n      <animated.div className=\"content\">\r\n        {props.width.interpolate((x) => {\r\n          setWidth(parseInt(x));\r\n          return x === \"0%\" ? \"Döndür!\" : parseInt(x) + \"%\";\r\n        })}\r\n      </animated.div>\r\n    </button>\r\n  );\r\n};\r\n\r\nfunction getWinner() {\r\n  const elements = document.getElementsByClassName(\"textstyle2\");\r\n  let minY = 3000;\r\n  let elem = -1;\r\n  for (let i = 0; i < elements.length; i++) {\r\n    if (elements[i].getBoundingClientRect().y < minY) {\r\n      minY = elements[i].getBoundingClientRect().y;\r\n      elem = i;\r\n    }\r\n  }\r\n  toast.success(\"Bugünün şanslı içeceği: \" + elements[elem].innerHTML.substring(0, elements[elem].innerHTML.lastIndexOf(\" \")) + \"!\");\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}