{"ast":null,"code":"var _JSON$parse,\n    _jsxFileName = \"C:\\\\Users\\\\Neptun\\\\Desktop\\\\lucky-wheel-master\\\\src\\\\App.js\";\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport \"./App.css\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport { StyleSheet } from 'react-native';\nvar storage = window.localStorage;\nconst DEFAULT = \"default_list\";\nlet x = 0;\nlet checkBoxes = [false, false, false, false];\nlet checkList = [\"\", \"\", \"\", \"\"];\nlet maksimumYemek = 2;\nconst red = \"#2C302E\";\nconst triangle = \"#2C302E\";\nconst wheel = \"#BA181B\";\nconst fieldcolor = \"#FFFFFF\";\nconst textcolor = \"#FFFFFF\";\nconst styles = StyleSheet.create({\n  text: {\n    color: '#FFFFFF'\n  }\n});\nlet default_list = (_JSON$parse = JSON.parse(storage.getItem(DEFAULT))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [\"aa\", \"bb\", \"cc\", \"dd\", \"ee\"];\nconst OFFSET = Math.random();\n\nconst map = function (value, in_min, in_max, out_min, out_max) {\n  //console.log(value);\n  //console.log(\n  //  ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n  //);\n  if (value === 0) {\n    return out_min;\n  }\n\n  return (value - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n};\n\nfunction App() {\n  const r = 200;\n  const cx = 250;\n  const cy = 250;\n  const [list, setList] = useState(default_list);\n\n  if (x == 0) {\n    const params = {\n      filters: \"\",\n      count: maksimumYemek + \"\"\n    };\n    axios.post('http://localhost:8080/filters', params).then(function (response) {\n      default_list = response.data.toString().split(\"/\");\n      setList(default_list);\n      x = 1;\n    });\n  }\n\n  const [power, setPower] = useState(0);\n  const [acc, setAcc] = useState(0);\n  const config = {\n    mass: 50,\n    tension: 200,\n    friction: 200,\n    precision: 0.001\n  };\n  const [props, set] = useSpring(() => ({\n    transform: \"rotate(0deg)\",\n    immediate: false\n  })); // const addItem = () => {\n  //   storage.setItem(DEFAULT, JSON.stringify([...list, name]));\n  //   setList([...list, name]);\n  //   setName(\"\");\n  // };\n  // const deleteItem = (e) => {\n  //   const { item } = e.currentTarget.dataset;\n  //   console.log(item)\n  //   storage.setItem(DEFAULT, JSON.stringify(list.filter((e) => e !== item)));\n  //   setList(list.filter((e) => e !== item));\n  // };\n  // const reset=()=>{\n  //   storage.clear()\n  //   window.location.reload()\n  // }\n\n  useEffect(() => {\n    set({\n      from: {\n        transform: `rotate(${map(acc, 0, 100, 0, 1700)}deg)`\n      },\n      transform: `rotate(${map(acc + power, 0, 100, 0, 1700)}deg)`,\n      immediate: false,\n      config\n    });\n    setAcc(acc + power);\n  }, [power]);\n\n  const rederItems = numOfItems => {\n    let items = [];\n\n    for (let i = 0; i < numOfItems; i++) {\n      let xLength = Math.cos(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let yLength = Math.sin(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let txLength = Math.cos(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      let tyLength = Math.sin(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      items.push( /*#__PURE__*/React.createElement(Fragment, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"line\", {\n        stroke: red,\n        strokeWidth: \"2\",\n        x1: cx + xLength,\n        y1: cy + yLength,\n        x2: cx,\n        y2: cy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"text\", {\n        style: styles.text,\n        x: cx + txLength,\n        y: cy + tyLength,\n        fontSize: \"15px\",\n        transform: `rotate(${((i + 0.5) / numOfItems + OFFSET) * 360} \n                  ${cx + txLength},\n                  ${cy + tyLength})`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, list[i])));\n    }\n\n    return items;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"50px 500px\",\n      gridGap: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    style: {\n      backgroundColor: fieldcolor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, \" Filtreler \"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"yemek1\",\n    name: \"ingredient1\",\n    value: \"yemek1\",\n    onChange: () => {\n      checkBoxes[0] = !checkBoxes[0];\n\n      if (checkBoxes[0]) {\n        checkList[0] = \"et\";\n      } else {\n        checkList[0] = \"\";\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"yemek1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, \"Et\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"yemek2\",\n    name: \"ingredient2\",\n    value: \"yemek2\",\n    onChange: () => {\n      checkBoxes[1] = !checkBoxes[1];\n\n      if (checkBoxes[1]) {\n        checkList[1] = \"balÄ±k\";\n      } else {\n        checkList[1] = \"\";\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"yemek2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, \"Bal\\u0131k\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"yemek3\",\n    name: \"ingredient3\",\n    value: \"yemek3\",\n    onChange: () => {\n      checkBoxes[2] = !checkBoxes[2];\n\n      if (checkBoxes[2]) {\n        checkList[2] = \"tavuk\";\n      } else {\n        checkList[2] = \"\";\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"yemek3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, \"Tavuk\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"yemek3\",\n    name: \"ingredient3\",\n    value: \"yemek3\",\n    onChange: () => {\n      checkBoxes[3] = !checkBoxes[3];\n\n      if (checkBoxes[3]) {\n        checkList[3] = \"bulgur\";\n      } else {\n        checkList[3] = \"\";\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"yemek3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"Bulgur\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    id: \"discrete-slider-small-steps\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, \"Maksimum Yemek Miktar\\u0131\"), /*#__PURE__*/React.createElement(Slider, {\n    onChange: (e, val) => {\n      maksimumYemek = val;\n    },\n    defaultValue: 2,\n    getAriaValueText: \"\",\n    \"aria-labelledby\": \"discrete-slider-small-steps\",\n    step: 1,\n    marks: true,\n    min: 2,\n    max: 12,\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"secondary\",\n    onClick: () => {\n      let filter = \"\";\n\n      for (let i = 0; i < checkList.length; i++) {\n        if (checkBoxes[i]) filter += checkList[i] + \"-\";\n      }\n\n      const params = {\n        filters: filter,\n        count: maksimumYemek + \"\"\n      };\n      axios.post('http://localhost:8080/filters', params).then(function (response) {\n        if (response.data == \"\") {\n          toast.error(\"Filtrelerinizle eÅleÅen yemek bulunamadÄ±!\");\n        } else {\n          default_list = response.data.toString().split(\"/\");\n        }\n\n        setList(default_list);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, \"Yemekleri Yenile\"), /*#__PURE__*/React.createElement(PressButton, {\n    setPower: setPower,\n    style: {\n      height: \"20vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      width: \"100vw\",\n      height: \"80vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    fill: wheel,\n    stroke: red,\n    strokeWidth: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"250\",\n    cy: \"250\",\n    r: r,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(animated.g, {\n    style: {\n      transform: props.transform,\n      transformOrigin: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, rederItems(list.length)), /*#__PURE__*/React.createElement(\"g\", {\n    fill: triangle,\n    stroke: triangle,\n    strokeWidth: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"250,70 230,30 270,30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst PressButton = ({\n  setPower\n}) => {\n  const [pressed, toggle] = useState(false);\n  const [width, setWidth] = useState(0);\n  const [props, set] = useSpring(() => ({\n    width: \"0%\",\n    backgroundColor: \"hotpink\"\n  }));\n  useEffect(() => {\n    if (pressed) set({\n      from: {\n        width: \"0%\",\n        backgroundColor: \"hotpink\"\n      },\n      to: {\n        width: \"100%\",\n        backgroundColor: \"red\"\n      },\n      immediate: false,\n      config: {\n        duration: 2000\n      }\n    });else {\n      setPower(parseInt(width));\n      set({\n        to: {\n          width: \"0%\",\n          backgroundColor: \"hotpink\"\n        },\n        immediate: true\n      });\n    }\n  }, [pressed]);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"main\",\n    onMouseDown: () => {\n      toggle(!pressed);\n    },\n    onMouseUp: () => {\n      toggle(!pressed);\n    },\n    onTouchStart: () => {\n      toggle(!pressed);\n    },\n    onTouchEnd: () => {\n      toggle(!pressed);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    className: \"fill\",\n    style: {\n      width: props.width,\n      background: props.backgroundColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(animated.div, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }, props.width.interpolate(x => {\n    setWidth(parseInt(x));\n    return x === \"0%\" ? \"DÃ¶ndÃ¼r!\" : parseInt(x) + \"%\";\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Neptun/Desktop/lucky-wheel-master/src/App.js"],"names":["React","Fragment","useState","useEffect","animated","useSpring","axios","ToastContainer","toast","Slider","Typography","StyleSheet","storage","window","localStorage","DEFAULT","x","checkBoxes","checkList","maksimumYemek","red","triangle","wheel","fieldcolor","textcolor","styles","create","text","color","default_list","JSON","parse","getItem","OFFSET","Math","random","map","value","in_min","in_max","out_min","out_max","App","r","cx","cy","list","setList","params","filters","count","post","then","response","data","toString","split","power","setPower","acc","setAcc","config","mass","tension","friction","precision","props","set","transform","immediate","from","rederItems","numOfItems","items","i","xLength","cos","PI","yLength","sin","txLength","tyLength","push","display","gridTemplateColumns","gridGap","backgroundColor","e","val","filter","length","error","height","width","transformOrigin","PressButton","pressed","toggle","setWidth","to","duration","parseInt","background","interpolate"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport \"./App.css\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport { StyleSheet, } from 'react-native';\n\nvar storage = window.localStorage;\n\nconst DEFAULT = \"default_list\";\nlet x = 0;\nlet checkBoxes = [false, false, false, false];\nlet checkList = [\"\", \"\", \"\", \"\"];\n\nlet maksimumYemek = 2;\n\nconst red = \"#2C302E\";\nconst triangle = \"#2C302E\"\nconst wheel = \"#BA181B\"\nconst fieldcolor = \"#FFFFFF\"\nconst textcolor = \"#FFFFFF\"\n\nconst styles = StyleSheet.create({\n  text: {\n    color: '#FFFFFF',\n  },\n\n});\n\n\nlet default_list = JSON.parse(storage.getItem(DEFAULT)) ?? [\n  \"aa\",\n  \"bb\",\n  \"cc\",\n  \"dd\",\n  \"ee\",\n];\n\nconst OFFSET = Math.random();\n\nconst map = function (value, in_min, in_max, out_min, out_max) {\n  //console.log(value);\n  //console.log(\n  //  ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n  //);\n  if (value === 0) {\n    return out_min;\n  }\n  return ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\n};\n\nfunction App() {\n  const r = 200;\n  const cx = 250;\n  const cy = 250;\n  const [list, setList] = useState(default_list);\n\n  if (x == 0) {\n    const params = { filters: \"\", count: maksimumYemek + \"\"};\n    axios.post('http://localhost:8080/filters', params)\n      .then(function (response) {\n\n        default_list = response.data.toString().split(\"/\");\n\n        setList(default_list);\n        x = 1;\n      });\n  }\n  const [power, setPower] = useState(0);\n  const [acc, setAcc] = useState(0);\n  const config = { mass: 50, tension: 200, friction: 200, precision: 0.001 };\n  const [props, set] = useSpring(() => ({\n    transform: \"rotate(0deg)\",\n    immediate: false,\n  }));\n\n\n  // const addItem = () => {\n  //   storage.setItem(DEFAULT, JSON.stringify([...list, name]));\n  //   setList([...list, name]);\n  //   setName(\"\");\n  // };\n  // const deleteItem = (e) => {\n  //   const { item } = e.currentTarget.dataset;\n  //   console.log(item)\n  //   storage.setItem(DEFAULT, JSON.stringify(list.filter((e) => e !== item)));\n  //   setList(list.filter((e) => e !== item));\n  // };\n  // const reset=()=>{\n  //   storage.clear()\n  //   window.location.reload()\n  // }\n\n  useEffect(() => {\n\n    set({\n      from: { transform: `rotate(${map(acc, 0, 100, 0, 1700)}deg)` },\n      transform: `rotate(${map(acc + power, 0, 100, 0, 1700)}deg)`,\n      immediate: false,\n      config,\n    });\n    setAcc(acc + power);\n  }, [power]);\n\n  const rederItems = (numOfItems) => {\n    let items = [];\n    for (let i = 0; i < numOfItems; i++) {\n      let xLength = Math.cos(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let yLength = Math.sin(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let txLength =\n        Math.cos(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      let tyLength =\n        Math.sin(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      items.push(\n        <Fragment key={i}>\n          <line\n            stroke={red}\n            strokeWidth=\"2\"\n            x1={cx + xLength}\n            y1={cy + yLength}\n            x2={cx}\n            y2={cy}\n          />\n          <text\n            style={styles.text}\n            x={cx + txLength}\n            y={cy + tyLength}\n            fontSize=\"15px\"\n            transform={`rotate(${((i + 0.5) / numOfItems + OFFSET) * 360} \n                  ${cx + txLength},\n                  ${cy + tyLength})`}\n          >\n            {list[i]}\n          </text>\n        </Fragment>\n      );\n    }\n    return items;\n  };\n\n\n  return (\n    <div style={{ display: \"grid\", gridTemplateColumns: \"50px 500px\", gridGap: 20 }}>\n      <fieldset style={{backgroundColor:fieldcolor}}>\n        <legend> Filtreler </legend>\n        <div>\n          <input type=\"checkbox\" id=\"yemek1\" name=\"ingredient1\" value=\"yemek1\" onChange={() => {\n            checkBoxes[0] = !checkBoxes[0];\n            if (checkBoxes[0]) {\n              checkList[0] = \"et\";\n            }\n            else {\n              checkList[0] = \"\";\n            }\n          }} />\n          <label for=\"yemek1\">Et</label>\n        </div>\n        <div>\n          <input type=\"checkbox\" id=\"yemek2\" name=\"ingredient2\" value=\"yemek2\" onChange={() => {\n            checkBoxes[1] = !checkBoxes[1];\n            if (checkBoxes[1]) {\n              checkList[1] = \"balÄ±k\";\n            }\n            else {\n              checkList[1] = \"\";\n            }\n          }} />\n          <label for=\"yemek2\">BalÄ±k</label>\n        </div>\n        <div>\n          <input type=\"checkbox\" id=\"yemek3\" name=\"ingredient3\" value=\"yemek3\" onChange={() => {\n            checkBoxes[2] = !checkBoxes[2];\n            if (checkBoxes[2]) {\n              checkList[2] = \"tavuk\";\n            }\n            else {\n              checkList[2] = \"\";\n            }\n          }} />\n          <label for=\"yemek3\">Tavuk</label>\n        </div>\n        <div>\n          <input type=\"checkbox\" id=\"yemek3\" name=\"ingredient3\" value=\"yemek3\" onChange={() => {\n            checkBoxes[3] = !checkBoxes[3];\n            if (checkBoxes[3]) {\n              checkList[3] = \"bulgur\";\n            }\n            else {\n              checkList[3] = \"\";\n            }\n          }} />\n          <label for=\"yemek3\">Bulgur</label>\n        </div>\n        <div>\n          <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n            Maksimum Yemek MiktarÄ±\n          </Typography>\n          <Slider\n            onChange={(e,val)=>{\n              maksimumYemek = val;\n            }}\n\n            defaultValue={2}\n            getAriaValueText={\"\"}\n            aria-labelledby=\"discrete-slider-small-steps\"\n            step={1}\n            marks\n            min={2}\n            max={12}\n            valueLabelDisplay=\"auto\"\n          />\n        </div>\n        <button className=\"secondary\" onClick={() => {\n          let filter = \"\";\n          for (let i = 0; i < checkList.length; i++) {\n            if (checkBoxes[i])\n              filter += checkList[i] + \"-\";\n          }\n          const params = { filters: filter, count: maksimumYemek + \"\"};\n          axios.post('http://localhost:8080/filters', params)\n            .then(function (response) {\n              if (response.data == \"\") {\n                toast.error(\"Filtrelerinizle eÅleÅen yemek bulunamadÄ±!\");\n              }\n              else {\n                default_list = response.data.toString().split(\"/\");\n              }\n              setList(default_list);\n            });\n        }}>Yemekleri Yenile</button>\n        <PressButton setPower={setPower} style={{ height: \"20vh\" }} />\n      </fieldset>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 500 500\"\n        style={{ width: \"100vw\", height: \"80vh\" }}\n      >\n        <g fill={wheel} stroke={red} strokeWidth=\"10\">\n          <circle cx=\"250\" cy=\"250\" r={r} />\n        </g>\n        <animated.g\n          style={{\n            transform: props.transform,\n            transformOrigin: \"center\",\n          }}\n        >\n          {rederItems(list.length)}\n        </animated.g>\n        {/* <g fill=\"#61DAFB\">\n            <circle cx=\"250\" cy=\"250\" r=\"15\" />\n          </g>\n          <g fill=\"black\">\n            <circle cx=\"250\" cy=\"250\" r=\"5\" />\n          </g> */}\n        <g fill={triangle} stroke={triangle} strokeWidth=\"2\">\n          <polygon points=\"250,70 230,30 270,30\" />\n        </g>\n      </svg>\n      <ToastContainer />\n    </div>\n  );\n}\n\nconst PressButton = ({ setPower }) => {\n  const [pressed, toggle] = useState(false);\n  const [width, setWidth] = useState(0);\n  const [props, set] = useSpring(() => ({\n    width: \"0%\",\n    backgroundColor: \"hotpink\",\n  }));\n  useEffect(() => {\n    if (pressed)\n      set({\n        from: { width: \"0%\", backgroundColor: \"hotpink\" },\n        to: { width: \"100%\", backgroundColor: \"red\" },\n        immediate: false,\n        config: { duration: 2000 },\n      });\n    else {\n      setPower(parseInt(width));\n      set({ to: { width: \"0%\", backgroundColor: \"hotpink\" }, immediate: true });\n    }\n  }, [pressed]);\n\n  return (\n    <button\n      className=\"main\"\n      onMouseDown={() => {\n        toggle(!pressed);\n      }}\n      onMouseUp={() => {\n        toggle(!pressed);\n      }}\n      onTouchStart={() => {\n        toggle(!pressed);\n      }}\n      onTouchEnd={() => {\n        toggle(!pressed);\n      }}\n    >\n      <animated.div\n        className=\"fill\"\n        style={{\n          width: props.width,\n          background: props.backgroundColor,\n        }}\n      />\n      <animated.div className=\"content\">\n        {props.width.interpolate((x) => {\n          setWidth(parseInt(x));\n          return x === \"0%\" ? \"DÃ¶ndÃ¼r!\" : parseInt(x) + \"%\";\n        })}\n      </animated.div>\n    </button>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}