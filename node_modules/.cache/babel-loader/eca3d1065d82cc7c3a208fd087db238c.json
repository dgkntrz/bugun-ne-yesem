{"ast":null,"code":"var _JSON$parse,\n    _jsxFileName = \"C:\\\\Users\\\\Neptun\\\\Desktop\\\\lucky-wheel-master\\\\src\\\\App.js\";\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!./delete.svg\";\nimport \"./App.css\";\nimport axios from 'axios';\nvar storage = window.localStorage;\nconst DEFAULT = \"default_list\";\nlet x = 0;\nlet default_list = (_JSON$parse = JSON.parse(storage.getItem(DEFAULT))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [\"aa\", \"bb\", \"cc\", \"dd\", \"ee\"];\nconst OFFSET = Math.random();\n\nconst map = function (value, in_min, in_max, out_min, out_max) {\n  //console.log(value);\n  //console.log(\n  //  ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n  //);\n  if (value === 0) {\n    return out_min;\n  }\n\n  return (value - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n};\n\nfunction App() {\n  const r = 200;\n  const cx = 250;\n  const cy = 250;\n  const [st, st2] = useState(\"\");\n  const [list, setList] = useState(default_list);\n\n  if (x == 0) {\n    console.log(x);\n    const params = {\n      filters: '',\n      count: '2'\n    };\n    axios.post('http://localhost:8080/filters', params).then(function (response) {\n      default_list = response.data.toString().split(\"/\");\n      setList(default_list);\n      st2(response.data);\n      x = 1;\n    });\n  }\n\n  const [name, setName] = useState(\"\");\n  const [power, setPower] = useState(0);\n  const [acc, setAcc] = useState(0);\n  const config = {\n    mass: 50,\n    tension: 200,\n    friction: 200,\n    precision: 0.001\n  };\n  const [props, set] = useSpring(() => ({\n    transform: \"rotate(0deg)\",\n    immediate: false\n  })); // const addItem = () => {\n  //   storage.setItem(DEFAULT, JSON.stringify([...list, name]));\n  //   setList([...list, name]);\n  //   setName(\"\");\n  // };\n  // const deleteItem = (e) => {\n  //   const { item } = e.currentTarget.dataset;\n  //   console.log(item)\n  //   storage.setItem(DEFAULT, JSON.stringify(list.filter((e) => e !== item)));\n  //   setList(list.filter((e) => e !== item));\n  // };\n  // const reset=()=>{\n  //   storage.clear()\n  //   window.location.reload()\n  // }\n\n  useEffect(() => {\n    set({\n      from: {\n        transform: `rotate(${map(acc, 0, 100, 0, 1700)}deg)`\n      },\n      transform: `rotate(${map(acc + power, 0, 100, 0, 1700)}deg)`,\n      immediate: false,\n      config\n    });\n    setAcc(acc + power);\n  }, [power]);\n\n  const rederItems = numOfItems => {\n    let items = [];\n\n    for (let i = 0; i < numOfItems; i++) {\n      let xLength = Math.cos(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let yLength = Math.sin(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let txLength = Math.cos(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      let tyLength = Math.sin(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      items.push( /*#__PURE__*/React.createElement(Fragment, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"line\", {\n        stroke: \"rgb(255,0,0)\",\n        strokeWidth: \"2\",\n        x1: cx + xLength,\n        y1: cy + yLength,\n        x2: cx,\n        y2: cy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"text\", {\n        x: cx + txLength,\n        y: cy + tyLength,\n        fontSize: \"15px\",\n        transform: `rotate(${((i + 0.5) / numOfItems + OFFSET) * 360} \n                  ${cx + txLength},\n                  ${cy + tyLength})`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, list[i])));\n    }\n\n    return items;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflowX: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      width: \"100vw\",\n      height: \"80vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"white\",\n    stroke: \"green\",\n    strokeWidth: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"250\",\n    cy: \"250\",\n    r: r,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(animated.g, {\n    style: {\n      transform: props.transform,\n      transformOrigin: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, rederItems(list.length)), /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#61DAFB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"250\",\n    cy: \"250\",\n    r: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"250\",\n    cy: \"250\",\n    r: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"lime\",\n    stroke: \"purple\",\n    strokeWidth: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"250,70 230,30 270,30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(PressButton, {\n    setPower: setPower,\n    style: {\n      height: \"20vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst PressButton = ({\n  setPower\n}) => {\n  const [pressed, toggle] = useState(false);\n  const [width, setWidth] = useState(0);\n  const [props, set] = useSpring(() => ({\n    width: \"0%\",\n    backgroundColor: \"hotpink\"\n  }));\n  useEffect(() => {\n    if (pressed) set({\n      from: {\n        width: \"0%\",\n        backgroundColor: \"hotpink\"\n      },\n      to: {\n        width: \"100%\",\n        backgroundColor: \"red\"\n      },\n      immediate: false,\n      config: {\n        duration: 2000\n      }\n    });else {\n      setPower(parseInt(width));\n      set({\n        to: {\n          width: \"0%\",\n          backgroundColor: \"hotpink\"\n        },\n        immediate: true\n      });\n    }\n  }, [pressed]);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"main\",\n    onMouseDown: () => {\n      toggle(!pressed);\n    },\n    onMouseUp: () => {\n      toggle(!pressed);\n    },\n    onTouchStart: () => {\n      toggle(!pressed);\n    },\n    onTouchEnd: () => {\n      toggle(!pressed);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    className: \"fill\",\n    style: {\n      width: props.width,\n      background: props.backgroundColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(animated.div, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, props.width.interpolate(x => {\n    setWidth(parseInt(x));\n    return x === \"0%\" ? \"Döndür!\" : parseInt(x) + \"%\";\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Neptun/Desktop/lucky-wheel-master/src/App.js"],"names":["React","Fragment","useState","useEffect","animated","useSpring","axios","storage","window","localStorage","DEFAULT","x","default_list","JSON","parse","getItem","OFFSET","Math","random","map","value","in_min","in_max","out_min","out_max","App","r","cx","cy","st","st2","list","setList","console","log","params","filters","count","post","then","response","data","toString","split","name","setName","power","setPower","acc","setAcc","config","mass","tension","friction","precision","props","set","transform","immediate","from","rederItems","numOfItems","items","i","xLength","cos","PI","yLength","sin","txLength","tyLength","push","overflowX","width","height","transformOrigin","length","PressButton","pressed","toggle","setWidth","backgroundColor","to","duration","parseInt","background","interpolate"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport {ReactComponent as Logo} from \"./delete.svg\";\nimport \"./App.css\";\nimport axios from 'axios';\n\nvar storage = window.localStorage;\n\nconst DEFAULT = \"default_list\";\nlet x = 0;\n\nlet default_list = JSON.parse(storage.getItem(DEFAULT)) ?? [\n  \"aa\",\n  \"bb\",\n  \"cc\",\n  \"dd\",\n  \"ee\",\n];\n\nconst OFFSET = Math.random();\n\nconst map = function (value, in_min, in_max, out_min, out_max) {\n  //console.log(value);\n  //console.log(\n  //  ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n  //);\n  if (value === 0) {\n    return out_min;\n  }\n  return ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\n};\n\nfunction App() {\n  const r = 200;\n  const cx = 250;\n  const cy = 250;\n  const [st,st2] = useState(\"\");\n  const [list, setList] = useState(default_list);\n\n    if (x == 0){\n\nconsole.log(x);\n    const params = { filters: '', count: '2' };\n    axios.post('http://localhost:8080/filters', params)\n        .then(function (response) {\n\n          default_list = response.data.toString().split(\"/\");\n\n          setList(default_list);\n          st2(response.data);\n          x = 1;\n        });\n\n  \n      }\n    \n\n\n  \n\n  const [name, setName] = useState(\"\");\n  const [power, setPower] = useState(0);\n  const [acc, setAcc] = useState(0);\n  const config = { mass: 50, tension: 200, friction: 200, precision: 0.001 };\n  const [props, set] = useSpring(() => ({\n    transform: \"rotate(0deg)\",\n    immediate: false,\n  }));\n  // const addItem = () => {\n  //   storage.setItem(DEFAULT, JSON.stringify([...list, name]));\n  //   setList([...list, name]);\n  //   setName(\"\");\n  // };\n  // const deleteItem = (e) => {\n  //   const { item } = e.currentTarget.dataset;\n  //   console.log(item)\n  //   storage.setItem(DEFAULT, JSON.stringify(list.filter((e) => e !== item)));\n  //   setList(list.filter((e) => e !== item));\n  // };\n  // const reset=()=>{\n  //   storage.clear()\n  //   window.location.reload()\n  // }\n\n  useEffect(() => {\n    set({\n      from: { transform: `rotate(${map(acc, 0, 100, 0, 1700)}deg)` },\n      transform: `rotate(${map(acc + power, 0, 100, 0, 1700)}deg)`,\n      immediate: false,\n      config,\n    });\n    setAcc(acc + power);\n  }, [power]);\n\n  const rederItems = (numOfItems) => {\n    let items = [];\n    for (let i = 0; i < numOfItems; i++) {\n      let xLength = Math.cos(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let yLength = Math.sin(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let txLength =\n        Math.cos(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      let tyLength =\n        Math.sin(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      items.push(\n        <Fragment key={i}>\n          <line\n            stroke=\"rgb(255,0,0)\"\n            strokeWidth=\"2\"\n            x1={cx + xLength}\n            y1={cy + yLength}\n            x2={cx}\n            y2={cy}\n          />\n          <text\n            x={cx + txLength}\n            y={cy + tyLength}\n            fontSize=\"15px\"\n            transform={`rotate(${((i + 0.5) / numOfItems + OFFSET) * 360} \n                  ${cx + txLength},\n                  ${cy + tyLength})`}\n          >\n            {list[i]}\n          </text>\n        </Fragment>\n      );\n    }\n    return items;\n  };\n\n  return (\n    <div style={{ overflowX: \"hidden\" }}>\n      <div>\n        <label>\n          <input type=\"checkbox\"/>\n        </label>\n      </div>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 500 500\"\n        style={{ width: \"100vw\", height: \"80vh\" }}\n      >\n        <g fill=\"white\" stroke=\"green\" strokeWidth=\"10\">\n          <circle cx=\"250\" cy=\"250\" r={r} />\n        </g>\n        <animated.g\n          style={{\n            transform: props.transform,\n            transformOrigin: \"center\",\n          }}\n        >\n          {rederItems(list.length)}\n        </animated.g>\n        <g fill=\"#61DAFB\">\n          <circle cx=\"250\" cy=\"250\" r=\"15\" />\n        </g>\n        <g fill=\"black\">\n          <circle cx=\"250\" cy=\"250\" r=\"5\" />\n        </g>\n        <g fill=\"lime\" stroke=\"purple\" strokeWidth=\"2\">\n          <polygon points=\"250,70 230,30 270,30\" />\n        </g>\n      </svg>\n      <PressButton setPower={setPower} style={{ height: \"20vh\" }} />\n      {/* <div style={{ marginTop: \"20vh\", marginBottom: \"5vh\" }}>\n        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n        <button className=\"button\" onClick={addItem}>Add</button>\n        <button className=\"button\" onClick={reset}>reset</button>\n        {list.map(n => (\n          <div key={n} className=\"item\">\n            {n}\n            <Logo\n              data-item={n}\n              fill=\"#a3aab8\"\n              style={{ height: \"1em\", width:'auto', verticalAlign: \"sub\", marginLeft: \"5px\" }}\n              onClick={deleteItem}\n            />\n          </div>\n        ))}\n      </div> */}\n    </div>\n  );\n}\n\nconst PressButton = ({ setPower }) => {\n  const [pressed, toggle] = useState(false);\n  const [width, setWidth] = useState(0);\n  const [props, set] = useSpring(() => ({\n    width: \"0%\",\n    backgroundColor: \"hotpink\",\n  }));\n  useEffect(() => {\n    if (pressed)\n      set({\n        from: { width: \"0%\", backgroundColor: \"hotpink\" },\n        to: { width: \"100%\", backgroundColor: \"red\" },\n        immediate: false,\n        config: { duration: 2000 },\n      });\n    else {\n      setPower(parseInt(width));\n      set({ to: { width: \"0%\", backgroundColor: \"hotpink\" }, immediate: true });\n    }\n  }, [pressed]);\n\n  return (\n    <button\n      className=\"main\"\n      onMouseDown={() => {\n        toggle(!pressed);\n      }}\n      onMouseUp={() => {\n        toggle(!pressed);\n      }}\n      onTouchStart={() => {\n        toggle(!pressed);\n      }}\n      onTouchEnd={() => {\n        toggle(!pressed);\n      }}\n    >\n      <animated.div\n        className=\"fill\"\n        style={{\n          width: props.width,\n          background: props.backgroundColor,\n        }}\n      />\n      <animated.div className=\"content\">\n        {props.width.interpolate((x) => {\n          setWidth(parseInt(x));\n          return x === \"0%\" ? \"Döndür!\" : parseInt(x) + \"%\";\n        })}\n      </animated.div>\n    </button>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}