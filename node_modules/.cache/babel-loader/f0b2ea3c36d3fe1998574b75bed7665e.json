{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neptun\\\\Desktop\\\\lucky-wheel-master\\\\src\\\\App.js\",\n    _JSON$parse;\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!./delete.svg\";\nimport \"./App.css\";\nimport Checkbox from './Checkbox';\nimport axios from 'axios';\nconst items = ['One', 'Two', 'Three'];\n\ncomponentWillMount = () => {\n  this.selectedCheckboxes = new Set();\n};\n\ntoggleCheckbox = label => {\n  if (this.selectedCheckboxes.has(label)) {\n    this.selectedCheckboxes.delete(label);\n  } else {\n    this.selectedCheckboxes.add(label);\n  }\n};\n\nhandleFormSubmit = formSubmitEvent => {\n  formSubmitEvent.preventDefault();\n\n  for (const checkbox of this.selectedCheckboxes) {\n    console.log(checkbox, 'is selected.');\n  }\n};\n\ncreateCheckbox = label => /*#__PURE__*/React.createElement(Checkbox, {\n  label: label,\n  handleCheckboxChange: this.toggleCheckbox,\n  key: label,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n});\n\ncreateCheckboxes = () => items.map(this.createCheckbox);\n\nvar storage = window.localStorage;\nconst DEFAULT = \"default_list\";\nlet x = 0;\nlet default_list = (_JSON$parse = JSON.parse(storage.getItem(DEFAULT))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [\"aa\", \"bb\", \"cc\", \"dd\", \"ee\"];\nconst OFFSET = Math.random();\n\nconst map = function (value, in_min, in_max, out_min, out_max) {\n  //console.log(value);\n  //console.log(\n  //  ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n  //);\n  if (value === 0) {\n    return out_min;\n  }\n\n  return (value - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n};\n\nfunction App() {\n  const r = 200;\n  const cx = 250;\n  const cy = 250;\n  const [st, st2] = useState(\"\");\n  const [list, setList] = useState(default_list);\n\n  if (x == 0) {\n    console.log(x);\n    const params = {\n      filters: '',\n      count: '2'\n    };\n    axios.post('http://localhost:8080/filters', params).then(function (response) {\n      var _JSON$parse2;\n\n      default_list = (_JSON$parse2 = JSON.parse(storage.getItem(DEFAULT))) !== null && _JSON$parse2 !== void 0 ? _JSON$parse2 : response.data.toString().split(\"/\");\n      setList(default_list);\n      st2(response.data);\n      x = 1;\n    });\n  }\n\n  const [name, setName] = useState(\"\");\n  const [power, setPower] = useState(0);\n  const [acc, setAcc] = useState(0);\n  const config = {\n    mass: 50,\n    tension: 200,\n    friction: 200,\n    precision: 0.001\n  };\n  const [props, set] = useSpring(() => ({\n    transform: \"rotate(0deg)\",\n    immediate: false\n  }));\n\n  const addItem = () => {\n    storage.setItem(DEFAULT, JSON.stringify([...list, name]));\n    setList([...list, name]);\n    setName(\"\");\n  };\n\n  const deleteItem = e => {\n    const {\n      item\n    } = e.currentTarget.dataset;\n    console.log(item);\n    storage.setItem(DEFAULT, JSON.stringify(list.filter(e => e !== item)));\n    setList(list.filter(e => e !== item));\n  };\n\n  const reset = () => {\n    storage.clear();\n    window.location.reload();\n  };\n\n  useEffect(() => {\n    set({\n      from: {\n        transform: `rotate(${map(acc, 0, 100, 0, 1700)}deg)`\n      },\n      transform: `rotate(${map(acc + power, 0, 100, 0, 1700)}deg)`,\n      immediate: false,\n      config\n    });\n    setAcc(acc + power);\n  }, [power]);\n\n  const rederItems = numOfItems => {\n    let items = [];\n\n    for (let i = 0; i < numOfItems; i++) {\n      let xLength = Math.cos(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let yLength = Math.sin(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let txLength = Math.cos(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      let tyLength = Math.sin(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      items.push( /*#__PURE__*/React.createElement(Fragment, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"line\", {\n        stroke: \"rgb(255,0,0)\",\n        strokeWidth: \"2\",\n        x1: cx + xLength,\n        y1: cy + yLength,\n        x2: cx,\n        y2: cy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"text\", {\n        x: cx + txLength,\n        y: cy + tyLength,\n        fontSize: \"15px\",\n        transform: `rotate(${((i + 0.5) / numOfItems + OFFSET) * 360} \n                  ${cx + txLength},\n                  ${cy + tyLength})`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }, list[i])));\n    }\n\n    return items;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      overflowX: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    classname: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-sm-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: this.handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, this.createCheckboxes())))), /*#__PURE__*/React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 500 500\",\n    style: {\n      width: \"100vw\",\n      height: \"80vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"white\",\n    stroke: \"green\",\n    strokeWidth: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"250\",\n    cy: \"250\",\n    r: r,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(animated.g, {\n    style: {\n      transform: props.transform,\n      transformOrigin: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, rederItems(list.length)), /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"#61DAFB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"250\",\n    cy: \"250\",\n    r: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"250\",\n    cy: \"250\",\n    r: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"lime\",\n    stroke: \"purple\",\n    strokeWidth: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"250,70 230,30 270,30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(PressButton, {\n    setPower: setPower,\n    style: {\n      height: \"20vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: \"20vh\",\n      marginBottom: \"5vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, \"reset\"), list.map(n => /*#__PURE__*/React.createElement(\"div\", {\n    key: n,\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, n, /*#__PURE__*/React.createElement(Logo, {\n    \"data-item\": n,\n    fill: \"#a3aab8\",\n    style: {\n      height: \"1em\",\n      width: 'auto',\n      verticalAlign: \"sub\",\n      marginLeft: \"5px\"\n    },\n    onClick: deleteItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  })))));\n}\n\nconst PressButton = ({\n  setPower\n}) => {\n  const [pressed, toggle] = useState(false);\n  const [width, setWidth] = useState(0);\n  const [props, set] = useSpring(() => ({\n    width: \"0%\",\n    backgroundColor: \"hotpink\"\n  }));\n  useEffect(() => {\n    if (pressed) set({\n      from: {\n        width: \"0%\",\n        backgroundColor: \"hotpink\"\n      },\n      to: {\n        width: \"100%\",\n        backgroundColor: \"red\"\n      },\n      immediate: false,\n      config: {\n        duration: 2000\n      }\n    });else {\n      setPower(parseInt(width));\n      set({\n        to: {\n          width: \"0%\",\n          backgroundColor: \"hotpink\"\n        },\n        immediate: true\n      });\n    }\n  }, [pressed]);\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"main\",\n    onMouseDown: () => {\n      toggle(!pressed);\n    },\n    onMouseUp: () => {\n      toggle(!pressed);\n    },\n    onTouchStart: () => {\n      toggle(!pressed);\n    },\n    onTouchEnd: () => {\n      toggle(!pressed);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    className: \"fill\",\n    style: {\n      width: props.width,\n      background: props.backgroundColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(animated.div, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, props.width.interpolate(x => {\n    setWidth(parseInt(x));\n    return x === \"0%\" ? \"Döndür!\" : parseInt(x) + \"%\";\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Neptun/Desktop/lucky-wheel-master/src/App.js"],"names":["React","Fragment","useState","useEffect","animated","useSpring","Checkbox","axios","items","componentWillMount","selectedCheckboxes","Set","toggleCheckbox","label","has","delete","add","handleFormSubmit","formSubmitEvent","preventDefault","checkbox","console","log","createCheckbox","createCheckboxes","map","storage","window","localStorage","DEFAULT","x","default_list","JSON","parse","getItem","OFFSET","Math","random","value","in_min","in_max","out_min","out_max","App","r","cx","cy","st","st2","list","setList","params","filters","count","post","then","response","data","toString","split","name","setName","power","setPower","acc","setAcc","config","mass","tension","friction","precision","props","set","transform","immediate","addItem","setItem","stringify","deleteItem","e","item","currentTarget","dataset","filter","reset","clear","location","reload","from","rederItems","numOfItems","i","xLength","cos","PI","yLength","sin","txLength","tyLength","push","overflowX","width","height","transformOrigin","length","marginTop","marginBottom","target","n","verticalAlign","marginLeft","PressButton","pressed","toggle","setWidth","backgroundColor","to","duration","parseInt","background","interpolate"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport { ReactComponent as Logo } from \"./delete.svg\";\nimport \"./App.css\";\nimport Checkbox from './Checkbox'\nimport axios from 'axios';\n\nconst items = [\n  'One',\n  'Two',\n  'Three',\n];\n\ncomponentWillMount = () => {\n  this.selectedCheckboxes = new Set();\n}\n\ntoggleCheckbox = label => {\n  if (this.selectedCheckboxes.has(label)) {\n    this.selectedCheckboxes.delete(label);\n  } else {\n    this.selectedCheckboxes.add(label);\n  }\n}\n\nhandleFormSubmit = formSubmitEvent => {\n  formSubmitEvent.preventDefault();\n\n  for (const checkbox of this.selectedCheckboxes) {\n    console.log(checkbox, 'is selected.');\n  }\n}\n\ncreateCheckbox = label => (\n  <Checkbox\n    label={label}\n    handleCheckboxChange={this.toggleCheckbox}\n    key={label}\n  />\n)\n\ncreateCheckboxes = () => (\n  items.map(this.createCheckbox)\n)\n\nvar storage = window.localStorage;\n\nconst DEFAULT = \"default_list\";\nlet x = 0;\n\nlet default_list = JSON.parse(storage.getItem(DEFAULT)) ?? [\n  \"aa\",\n  \"bb\",\n  \"cc\",\n  \"dd\",\n  \"ee\",\n];\n\nconst OFFSET = Math.random();\n\nconst map = function (value, in_min, in_max, out_min, out_max) {\n  //console.log(value);\n  //console.log(\n  //  ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n  //);\n  if (value === 0) {\n    return out_min;\n  }\n  return ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\n};\n\nfunction App() {\n  const r = 200;\n  const cx = 250;\n  const cy = 250;\n  const [st, st2] = useState(\"\");\n  const [list, setList] = useState(default_list);\n\n  if (x == 0) {\n\n    console.log(x);\n    const params = { filters: '', count: '2' };\n    axios.post('http://localhost:8080/filters', params)\n      .then(function (response) {\n\n        default_list = JSON.parse(storage.getItem(DEFAULT)) ?? response.data.toString().split(\"/\");\n\n        setList(default_list);\n        st2(response.data);\n        x = 1;\n      });\n\n\n  }\n\n\n\n\n\n  const [name, setName] = useState(\"\");\n  const [power, setPower] = useState(0);\n  const [acc, setAcc] = useState(0);\n  const config = { mass: 50, tension: 200, friction: 200, precision: 0.001 };\n  const [props, set] = useSpring(() => ({\n    transform: \"rotate(0deg)\",\n    immediate: false,\n  }));\n  const addItem = () => {\n    storage.setItem(DEFAULT, JSON.stringify([...list, name]));\n    setList([...list, name]);\n    setName(\"\");\n  };\n  const deleteItem = (e) => {\n    const { item } = e.currentTarget.dataset;\n    console.log(item)\n    storage.setItem(DEFAULT, JSON.stringify(list.filter((e) => e !== item)));\n    setList(list.filter((e) => e !== item));\n  };\n  const reset = () => {\n    storage.clear()\n    window.location.reload()\n  }\n\n  useEffect(() => {\n    set({\n      from: { transform: `rotate(${map(acc, 0, 100, 0, 1700)}deg)` },\n      transform: `rotate(${map(acc + power, 0, 100, 0, 1700)}deg)`,\n      immediate: false,\n      config,\n    });\n    setAcc(acc + power);\n  }, [power]);\n\n  const rederItems = (numOfItems) => {\n    let items = [];\n    for (let i = 0; i < numOfItems; i++) {\n      let xLength = Math.cos(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let yLength = Math.sin(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let txLength =\n        Math.cos(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      let tyLength =\n        Math.sin(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      items.push(\n        <Fragment key={i}>\n          <line\n            stroke=\"rgb(255,0,0)\"\n            strokeWidth=\"2\"\n            x1={cx + xLength}\n            y1={cy + yLength}\n            x2={cx}\n            y2={cy}\n          />\n          <text\n            x={cx + txLength}\n            y={cy + tyLength}\n            fontSize=\"15px\"\n            transform={`rotate(${((i + 0.5) / numOfItems + OFFSET) * 360} \n                  ${cx + txLength},\n                  ${cy + tyLength})`}\n          >\n            {list[i]}\n          </text>\n        </Fragment>\n      );\n    }\n    return items;\n  };\n\n  return (\n\n    <div style={{ overflowX: \"hidden\" }}>\n      <div className=\"container\">\n        <div classname=\"row\">\n          <div className=\"col-sm-12\">\n            <form onSubmit={this.handleFormSubmit}>\n              {this.createCheckboxes()}\n            </form>\n          </div>\n        </div>\n      </div>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 500 500\"\n        style={{ width: \"100vw\", height: \"80vh\" }}\n      >\n        <g fill=\"white\" stroke=\"green\" strokeWidth=\"10\">\n          <circle cx=\"250\" cy=\"250\" r={r} />\n        </g>\n        <animated.g\n          style={{\n            transform: props.transform,\n            transformOrigin: \"center\",\n          }}\n        >\n          {rederItems(list.length)}\n        </animated.g>\n        <g fill=\"#61DAFB\">\n          <circle cx=\"250\" cy=\"250\" r=\"15\" />\n        </g>\n        <g fill=\"black\">\n          <circle cx=\"250\" cy=\"250\" r=\"5\" />\n        </g>\n        <g fill=\"lime\" stroke=\"purple\" strokeWidth=\"2\">\n          <polygon points=\"250,70 230,30 270,30\" />\n        </g>\n      </svg>\n      <PressButton setPower={setPower} style={{ height: \"20vh\" }} />\n      <div style={{ marginTop: \"20vh\", marginBottom: \"5vh\" }}>\n        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n        <button className=\"button\" onClick={addItem}>Add</button>\n        <button className=\"button\" onClick={reset}>reset</button>\n        {list.map(n => (\n          <div key={n} className=\"item\">\n            {n}\n            <Logo\n              data-item={n}\n              fill=\"#a3aab8\"\n              style={{ height: \"1em\", width: 'auto', verticalAlign: \"sub\", marginLeft: \"5px\" }}\n              onClick={deleteItem}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nconst PressButton = ({ setPower }) => {\n  const [pressed, toggle] = useState(false);\n  const [width, setWidth] = useState(0);\n  const [props, set] = useSpring(() => ({\n    width: \"0%\",\n    backgroundColor: \"hotpink\",\n  }));\n  useEffect(() => {\n    if (pressed)\n      set({\n        from: { width: \"0%\", backgroundColor: \"hotpink\" },\n        to: { width: \"100%\", backgroundColor: \"red\" },\n        immediate: false,\n        config: { duration: 2000 },\n      });\n    else {\n      setPower(parseInt(width));\n      set({ to: { width: \"0%\", backgroundColor: \"hotpink\" }, immediate: true });\n    }\n  }, [pressed]);\n\n  return (\n    <button\n      className=\"main\"\n      onMouseDown={() => {\n        toggle(!pressed);\n      }}\n      onMouseUp={() => {\n        toggle(!pressed);\n      }}\n      onTouchStart={() => {\n        toggle(!pressed);\n      }}\n      onTouchEnd={() => {\n        toggle(!pressed);\n      }}\n    >\n      <animated.div\n        className=\"fill\"\n        style={{\n          width: props.width,\n          background: props.backgroundColor,\n        }}\n      />\n      <animated.div className=\"content\">\n        {props.width.interpolate((x) => {\n          setWidth(parseInt(x));\n          return x === \"0%\" ? \"Döndür!\" : parseInt(x) + \"%\";\n        })}\n      </animated.div>\n    </button>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}