{"ast":null,"code":"var _JSON$parse,\n    _jsxFileName = \"C:\\\\Users\\\\Neptun\\\\Desktop\\\\lucky-wheel-master\\\\src\\\\pages\\\\anasayfa.js\";\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { animated, useSpring } from \"react-spring\";\nimport \"../App.css\";\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport parse from 'html-react-parser';\nvar storage = window.localStorage;\nconst DEFAULT = \"default_list\";\nlet x = 0;\nlet checkBoxes = [false, false, false, false, false, false, false];\nlet checkList = [\"et\", \"balık\", \"tavuk\", \"bulgur\", \"sosis\", \"kıyma\", \"tatlı\"];\nlet maksimumYemek = 4;\nlet f = 0;\nlet k = 0;\nlet transformString = \"\";\nlet rotating = false;\nlet first = false; // const red = \"#BA181B\";\n\nconst red = \"#000000\";\nconst triangle = \"#2C302E\";\nconst wheel = \"#FFFFFF\";\nconst fieldcolor = \"#D3D3D3\";\nlet default_list = (_JSON$parse = JSON.parse(storage.getItem(DEFAULT))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [\"aa\", \"bb\", \"cc\", \"dd\", \"ee\"];\nconst OFFSET = Math.random();\n\nconst map = function (value, in_min, in_max, out_min, out_max) {\n  if (value === 0) {\n    return out_min;\n  }\n\n  return (value - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n};\n\nfunction App() {\n  const r = 200;\n  const cx = 250;\n  const cy = 250;\n  const [list, setList] = useState(default_list);\n  setInterval(() => {\n    const elements = document.getElementsByClassName(\"wheel\");\n    const st = window.getComputedStyle(elements[0], null);\n\n    if (!first) {\n      transformString = st.getPropertyValue(\"transform\");\n      first = true;\n    } else {\n      if (transformString != st.getPropertyValue(\"transform\")) {\n        console.log(\"1\");\n        f = 0;\n        rotating = true;\n        transformString = st.getPropertyValue(\"transform\");\n        k = 0;\n      } else {\n        if (rotating && transformString == st.getPropertyValue(\"transform\")) {\n          rotating = false;\n          f = 1;\n          console.log(\"2\"); // getWinner();\n        }\n      }\n    }\n  }, 400);\n  setInterval(() => {\n    if (!rotating && f == 1) {\n      k = k + 1;\n    } else if (f == 0) {\n      k = 0;\n    }\n\n    if (k == 10) {\n      getWinner();\n      f = 0;\n    }\n  }, 400);\n\n  if (x == 0) {\n    const params = {\n      filters: \"et-balık-tatlı-tavuk-bulgur-sosis-kıyma-\",\n      count: maksimumYemek + \"\"\n    };\n    axios.post('http://localhost:8080/filters', params).then(function (response) {\n      default_list = response.data.toString().split(\"/\");\n      setList(default_list);\n      x = 1;\n    });\n  }\n\n  const [power, setPower] = useState(0);\n  const [acc, setAcc] = useState(0);\n  const config = {\n    mass: 50,\n    tension: 200,\n    friction: 200,\n    precision: 0.001\n  };\n  const [props, set] = useSpring(() => ({\n    transform: \"rotate(0deg)\",\n    immediate: false\n  }));\n  useEffect(() => {}, [props]);\n  useEffect(() => {\n    set({\n      from: {\n        transform: `rotate(${map(acc, 0, 100, 0, 1700)}deg)`\n      },\n      transform: `rotate(${map(acc + power, 0, 100, 0, 1700)}deg)`,\n      immediate: false,\n      config\n    });\n    setAcc(acc + power);\n  }, [power]);\n\n  const rederItems = numOfItems => {\n    let items = [];\n\n    for (let i = 0; i < numOfItems; i++) {\n      let xLength = Math.cos(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let yLength = Math.sin(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\n      let txLength = Math.cos(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      let tyLength = Math.sin(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\n      let divs = \"\";\n\n      for (let k = list[i].length; k < 21; k++) {\n        divs += \"&ensp;\";\n      }\n\n      items.push( /*#__PURE__*/React.createElement(Fragment, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"line\", {\n        stroke: red,\n        strokeWidth: \"2\",\n        x1: cx + xLength,\n        y1: cy + yLength,\n        x2: cx,\n        y2: cy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"text\", {\n        className: \"textstyle2\",\n        x: cx + txLength - 50,\n        y: cy + tyLength,\n        fontSize: \"15px\",\n        transform: `rotate(${((i + 0.5) / numOfItems + OFFSET) * 360} \n                  ${cx + txLength},\n                  ${cy + tyLength})`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }, list[i], \" \", parse(divs))));\n    }\n\n    return items;\n  };\n\n  const boslukEkle = () => {\n    // &ensp;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \"\\u2002\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, \"Selamlar!\");\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Neptun/Desktop/lucky-wheel-master/src/pages/anasayfa.js"],"names":["React","Fragment","useState","useEffect","animated","useSpring","axios","ToastContainer","toast","Slider","Typography","parse","storage","window","localStorage","DEFAULT","x","checkBoxes","checkList","maksimumYemek","f","k","transformString","rotating","first","red","triangle","wheel","fieldcolor","default_list","JSON","getItem","OFFSET","Math","random","map","value","in_min","in_max","out_min","out_max","App","r","cx","cy","list","setList","setInterval","elements","document","getElementsByClassName","st","getComputedStyle","getPropertyValue","console","log","getWinner","params","filters","count","post","then","response","data","toString","split","power","setPower","acc","setAcc","config","mass","tension","friction","precision","props","set","transform","immediate","from","rederItems","numOfItems","items","i","xLength","cos","PI","yLength","sin","txLength","tyLength","divs","length","push","boslukEkle"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport \"../App.css\";\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport parse from 'html-react-parser';\r\n\r\n\r\nvar storage = window.localStorage;\r\n\r\nconst DEFAULT = \"default_list\";\r\nlet x = 0;\r\nlet checkBoxes = [false, false, false, false, false, false, false];\r\nlet checkList = [\"et\", \"balık\", \"tavuk\", \"bulgur\", \"sosis\", \"kıyma\", \"tatlı\"];\r\n\r\nlet maksimumYemek = 4;\r\nlet f = 0;\r\nlet k = 0;\r\nlet transformString = \"\";\r\nlet rotating = false;\r\nlet first = false;\r\n// const red = \"#BA181B\";\r\nconst red = \"#000000\";\r\nconst triangle = \"#2C302E\"\r\nconst wheel = \"#FFFFFF\"\r\nconst fieldcolor = \"#D3D3D3\"\r\n\r\n\r\nlet default_list = JSON.parse(storage.getItem(DEFAULT)) ?? [\r\n  \"aa\",\r\n  \"bb\",\r\n  \"cc\",\r\n  \"dd\",\r\n  \"ee\",\r\n];\r\n\r\nconst OFFSET = Math.random();\r\n\r\nconst map = function (value, in_min, in_max, out_min, out_max) {\r\n  if (value === 0) {\r\n    return out_min;\r\n  }\r\n  return ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\r\n};\r\n\r\nfunction App() {\r\n  const r = 200;\r\n  const cx = 250;\r\n  const cy = 250;\r\n  const [list, setList] = useState(default_list);\r\n  setInterval(() => {\r\n    const elements = document.getElementsByClassName(\"wheel\");\r\n    const st = window.getComputedStyle(elements[0], null);\r\n    if (!first) {\r\n      transformString = st.getPropertyValue(\"transform\");\r\n      first = true;\r\n    }\r\n    else {\r\n\r\n      if (transformString != st.getPropertyValue(\"transform\")) {\r\n        console.log(\"1\")\r\n        f = 0;\r\n        rotating = true;\r\n        transformString = st.getPropertyValue(\"transform\");\r\n        k = 0;\r\n      }\r\n      else {\r\n        if (rotating && transformString == st.getPropertyValue(\"transform\")) {\r\n          rotating = false;\r\n          f = 1;\r\n          console.log(\"2\")\r\n          // getWinner();\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n  }, 400);\r\n\r\n  setInterval(() => {\r\n    if (!rotating && f == 1) {\r\n      k = k + 1;\r\n    }\r\n    else if (f == 0) {\r\n      k = 0;\r\n    }\r\n    if (k == 10) {\r\n      getWinner();\r\n      f = 0;\r\n    }\r\n  }, 400)\r\n\r\n  if (x == 0) {\r\n    const params = { filters: \"et-balık-tatlı-tavuk-bulgur-sosis-kıyma-\", count: maksimumYemek + \"\" };\r\n    axios.post('http://localhost:8080/filters', params)\r\n      .then(function (response) {\r\n\r\n        default_list = response.data.toString().split(\"/\");\r\n        setList(default_list);\r\n        x = 1;\r\n      });\r\n  }\r\n  const [power, setPower] = useState(0);\r\n  const [acc, setAcc] = useState(0);\r\n  const config = { mass: 50, tension: 200, friction: 200, precision: 0.001 };\r\n  const [props, set] = useSpring(() => ({\r\n    transform: \"rotate(0deg)\",\r\n    immediate: false,\r\n  }));\r\n\r\n  useEffect(() => {\r\n\r\n  }, [props])\r\n\r\n  useEffect(() => {\r\n\r\n    set({\r\n      from: { transform: `rotate(${map(acc, 0, 100, 0, 1700)}deg)` },\r\n      transform: `rotate(${map(acc + power, 0, 100, 0, 1700)}deg)`,\r\n      immediate: false,\r\n      config,\r\n    });\r\n    setAcc(acc + power);\r\n  }, [power]);\r\n\r\n  const rederItems = (numOfItems) => {\r\n    let items = [];\r\n    for (let i = 0; i < numOfItems; i++) {\r\n      let xLength = Math.cos(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\r\n      let yLength = Math.sin(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\r\n      let txLength =\r\n        Math.cos(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\r\n      let tyLength =\r\n        Math.sin(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\r\n      let divs = \"\";\r\n\r\n      for (let k = list[i].length; k < 21; k++) {\r\n        divs += \"&ensp;\"\r\n      }\r\n      items.push(\r\n        <Fragment key={i}>\r\n          <line\r\n            stroke={red}\r\n            strokeWidth=\"2\"\r\n            x1={cx + xLength}\r\n            y1={cy + yLength}\r\n            x2={cx}\r\n            y2={cy}\r\n          />\r\n          <text\r\n            className=\"textstyle2\"\r\n            x={cx + txLength - 50}\r\n            y={cy + tyLength}\r\n            fontSize=\"15px\"\r\n            transform={`rotate(${((i + 0.5) / numOfItems + OFFSET) * 360} \r\n                  ${cx + txLength},\r\n                  ${cy + tyLength})`}\r\n          >\r\n            {list[i]} {parse(divs)}\r\n          </text>\r\n        </Fragment>\r\n      );\r\n    }\r\n    return items;\r\n  };\r\n\r\n  const boslukEkle = () => {\r\n    // &ensp;\r\n    return (<>&ensp;</>)\r\n  }\r\n\r\n  return (\r\n    <div>Selamlar!</div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}