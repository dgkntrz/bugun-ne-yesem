{"version":3,"sources":["pages/icecek.js","pages/tatli.js","pages/yemek.js","pages/anasayfa.js","pages/support.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["x","window","localStorage","checkBoxes","checkList","maksimumYemek","f","k","transformString","rotating","first","default_list","OFFSET","Math","random","map","value","in_min","in_max","out_min","out_max","PressButton","setPower","useState","pressed","toggle","width","setWidth","useSpring","backgroundColor","props","set","useEffect","from","to","immediate","config","duration","parseInt","className","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","div","style","background","interpolate","App","r","list","setList","setInterval","elements","document","getElementsByClassName","st","getComputedStyle","getPropertyValue","console","log","minY","elem","i","length","getBoundingClientRect","y","toast","success","innerHTML","substring","lastIndexOf","getWinner","params","filters","count","axios","post","then","response","data","toString","split","power","acc","setAcc","mass","tension","friction","precision","transform","display","gridTemplateColumns","gridGap","type","id","name","defaultChecked","onChange","for","Slider","e","val","defaultValue","getAriaValueText","aria-labelledby","step","marks","min","max","valueLabelDisplay","onClick","filter","error","height","xmlns","viewBox","fill","stroke","strokeWidth","cx","cy","g","transformOrigin","numOfItems","items","xLength","cos","PI","yLength","sin","txLength","tyLength","divs","push","key","x1","y1","x2","y2","fontSize","parse","rederItems","points","title","slideImages","offset","href","buttonClickEvent","innerText","getElementById","warning","placeholder","Main","exact","path","component","Home","Yemek","Tatli","Icecek","support","logo","showSideNav","logoStyles","navBarStyles","float","linkStyles","color","fontWeight","src","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.db8f8b68.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport \"../App.css\";\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport parse from 'html-react-parser';\r\n\r\n\r\nvar storage = window.localStorage;\r\n\r\nconst DEFAULT = \"default_list\";\r\nlet x = 0;\r\nlet checkBoxes = [false, false, false, false, false, false, false];\r\nlet checkList = [\"temel\", \"meyve\", \"alkol\", \"gazlı\", \"tatlıiçecek\", \"kahve\", \"çay\"];\r\n\r\nlet maksimumYemek = 4;\r\nlet f = 0;\r\nlet k = 0;\r\nlet transformString = \"\";\r\nlet rotating = false;\r\nlet first = false;\r\n// const red = \"#BA181B\";\r\nconst red = \"#000000\";\r\nconst triangle = \"#2C302E\"\r\nconst wheel = \"#FFFFFF\"\r\nconst fieldcolor = \"#D3D3D3\"\r\n\r\n\r\nlet default_list =  [\r\n\r\n];\r\n\r\nconst OFFSET = Math.random();\r\n\r\nconst map = function (value, in_min, in_max, out_min, out_max) {\r\n  if (value === 0) {\r\n    return out_min;\r\n  }\r\n  return ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\r\n};\r\n\r\nfunction App() {\r\n  const r = 200;\r\n  const cx = 250;\r\n  const cy = 250;\r\n  const [list, setList] = useState(default_list);\r\n  setInterval(() => {\r\n    const elements = document.getElementsByClassName(\"wheel\");\r\n    const st = window.getComputedStyle(elements[0], null);\r\n    if (!first) {\r\n      transformString = st.getPropertyValue(\"transform\");\r\n      first = true;\r\n    }\r\n    else {\r\n\r\n      if (transformString != st.getPropertyValue(\"transform\")) {\r\n        console.log(\"1\")\r\n        f = 0;\r\n        rotating = true;\r\n        transformString = st.getPropertyValue(\"transform\");\r\n        k = 0;\r\n      }\r\n      else {\r\n        if (rotating && transformString == st.getPropertyValue(\"transform\")) {\r\n          rotating = false;\r\n          f = 1;\r\n          console.log(\"2\")\r\n          // getWinner();\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n  }, 400);\r\n\r\n  setInterval(() => {\r\n    if (!rotating && f == 1) {\r\n      k = k + 1;\r\n    }\r\n    else if (f == 0) {\r\n      k = 0;\r\n    }\r\n    if (k == 10) {\r\n      getWinner();\r\n      f = 0;\r\n    }\r\n  }, 400)\r\n\r\n  if (x == 0) {\r\n    const params = { filters: \"temel-meyve-alkol-gazlı-tatlıiçecek-kahve-çay-\", count: maksimumYemek + \"\" };\r\n    axios.post('http://172.105.247.10:8080/filtersicecek', params)\r\n      .then(function (response) {\r\n\r\n        default_list = response.data.toString().split(\"/\");\r\n        setList(default_list);\r\n        x = 1;\r\n      });\r\n  }\r\n  const [power, setPower] = useState(0);\r\n  const [acc, setAcc] = useState(0);\r\n  const config = { mass: 50, tension: 200, friction: 200, precision: 0.001 };\r\n  const [props, set] = useSpring(() => ({\r\n    transform: \"rotate(0deg)\",\r\n    immediate: false,\r\n  }));\r\n\r\n  useEffect(() => {\r\n\r\n  }, [props])\r\n\r\n  useEffect(() => {\r\n\r\n    set({\r\n      from: { transform: `rotate(${map(acc, 0, 100, 0, 1700)}deg)` },\r\n      transform: `rotate(${map(acc + power, 0, 100, 0, 1700)}deg)`,\r\n      immediate: false,\r\n      config,\r\n    });\r\n    setAcc(acc + power);\r\n  }, [power]);\r\n\r\n  const rederItems = (numOfItems) => {\r\n    let items = [];\r\n    for (let i = 0; i < numOfItems; i++) {\r\n      let xLength = Math.cos(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\r\n      let yLength = Math.sin(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\r\n      let txLength =\r\n        Math.cos(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\r\n      let tyLength =\r\n        Math.sin(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\r\n      let divs = \"\";\r\n\r\n      for (let k = list[i].length; k < 21; k++) {\r\n        divs += \"&ensp;\"\r\n      }\r\n      items.push(\r\n        <Fragment key={i}>\r\n          <line\r\n            stroke={red}\r\n            strokeWidth=\"2\"\r\n            x1={cx + xLength}\r\n            y1={cy + yLength}\r\n            x2={cx}\r\n            y2={cy}\r\n          />\r\n          <text\r\n            className=\"textstyle2\"\r\n            x={cx + txLength - 70}\r\n            y={cy + tyLength}\r\n            fontSize=\"15px\"\r\n            transform={`rotate(${((i + 0.5) / numOfItems + OFFSET) * 360} \r\n                  ${cx + txLength},\r\n                  ${cy + tyLength})`}\r\n          >\r\n            {list[i]} {parse(divs)}\r\n          </text>\r\n        </Fragment>\r\n      );\r\n    }\r\n    return items;\r\n  };\r\n\r\n  const boslukEkle = () => {\r\n    // &ensp;\r\n    return (<>&ensp;</>)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"grid\", gridTemplateColumns: \"0px 500px\", gridGap: 20 }}>\r\n\r\n        <fieldset>\r\n          <legend className=\"textstyle\"> Filtreler </legend>\r\n          <fieldset>\r\n            <legend className=\"textstyle\"> İçerikler </legend>\r\n            <div className=\"textstyle\"></div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek1\" name=\"ingredient1\" value=\"yemek1\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[0] = !checkBoxes[0];\r\n                if (checkBoxes[0]) {\r\n                  checkList[0] = \"\";\r\n                }\r\n                else {\r\n                  checkList[0] = \"temel\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek1\">Temel</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek2\" name=\"ingredient2\" value=\"yemek2\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[1] = !checkBoxes[1];\r\n                if (checkBoxes[1]) {\r\n                  checkList[1] = \"\";\r\n                }\r\n                else {\r\n                  checkList[1] = \"meyve\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek2\">Meyve</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek3\" name=\"ingredient3\" value=\"yemek3\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[2] = !checkBoxes[2];\r\n                if (checkBoxes[2]) {\r\n                  checkList[2] = \"\";\r\n                }\r\n                else {\r\n                  checkList[2] = \"alkol\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek3\">Alkol</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek3\" name=\"ingredient3\" value=\"yemek3\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[3] = !checkBoxes[3];\r\n                if (checkBoxes[3]) {\r\n                  checkList[3] = \"\";\r\n                }\r\n                else {\r\n                  checkList[3] = \"gazlı\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek3\">Gazlı</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek4\" name=\"ingredient4\" value=\"yemek4\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[4] = !checkBoxes[4];\r\n                if (checkBoxes[4]) {\r\n                  checkList[4] = \"\";\r\n                }\r\n                else {\r\n                  checkList[4] = \"tatlıiçecek\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek4\">Tatlı</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek5\" name=\"ingredient5\" value=\"yemek5\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[5] = !checkBoxes[5];\r\n                if (checkBoxes[5]) {\r\n                  checkList[5] = \"\";\r\n                }\r\n                else {\r\n                  checkList[5] = \"kahve\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek5\">Kahve</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek6\" name=\"ingredient6\" value=\"yemek6\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[6] = !checkBoxes[6];\r\n                if (checkBoxes[6]) {\r\n                  checkList[6] = \"\";\r\n                }\r\n                else {\r\n                  checkList[6] = \"çay\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek6\">Çay</label>\r\n            </div>\r\n          </fieldset>\r\n          <div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div>\r\n          <div>\r\n            <label id=\"discrete-slider-small-steps\" className=\"textstyle\">\r\n              Maksimum İçecek Miktarı\r\n            </label>\r\n            <Slider\r\n              onChange={(e, val) => {\r\n                maksimumYemek = val;\r\n              }}\r\n\r\n              defaultValue={4}\r\n              getAriaValueText={\"\"}\r\n              aria-labelledby=\"discrete-slider-small-steps\"\r\n              step={1}\r\n              marks\r\n              min={2}\r\n              max={12}\r\n              valueLabelDisplay=\"auto\"\r\n            />\r\n          </div>\r\n\r\n          <button className=\"secondary\" onClick={() => {\r\n            let filter = \"\";\r\n            for (let i = 0; i < checkList.length; i++) {\r\n              if (!checkBoxes[i])\r\n                filter += checkList[i] + \"-\";\r\n            }\r\n            const params = { filters: filter, count: maksimumYemek + \"\" };\r\n            axios.post('http://172.105.247.10:8080/filtersicecek', params)\r\n              .then(function (response) {\r\n                if (response.data == \"\") {\r\n                  toast.error(\"Filtrelerinizle eşleşen yemek bulunamadı!\");\r\n                }\r\n                else {\r\n                  default_list = response.data.toString().split(\"/\");\r\n                }\r\n                setList(default_list);\r\n              });\r\n          }}>İçecekleri Yenile</button>\r\n          <PressButton setPower={setPower} style={{ height: \"20vh\" }} />\r\n        </fieldset>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 500 500\"\r\n          style={{ width: \"100vw\", height: \"80vh\" }}\r\n        >\r\n          <g fill={wheel} stroke={red} strokeWidth=\"10\">\r\n            <circle cx=\"250\" cy=\"250\" r={r} />\r\n          </g>\r\n          <animated.g\r\n            className={\"wheel\"}\r\n            style={{\r\n              transform: props.transform,\r\n              transformOrigin: \"center\",\r\n            }}\r\n          >\r\n            {rederItems(list.length)}\r\n          </animated.g>\r\n          <g fill={triangle} stroke={triangle} strokeWidth=\"2\">\r\n            <polygon points=\"250,70 230,30 270,30\" />\r\n          </g>\r\n        </svg>\r\n        <ToastContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst PressButton = ({ setPower }) => {\r\n  const [pressed, toggle] = useState(false);\r\n  const [width, setWidth] = useState(0);\r\n  const [props, set] = useSpring(() => ({\r\n    width: \"0%\",\r\n    backgroundColor: \"hotpink\",\r\n  }));\r\n  useEffect(() => {\r\n    if (pressed)\r\n      set({\r\n        from: { width: \"0%\", backgroundColor: \"hotpink\" },\r\n        to: { width: \"100%\", backgroundColor: \"red\" },\r\n        immediate: false,\r\n        config: { duration: 2000 },\r\n      });\r\n    else {\r\n      setPower(parseInt(width));\r\n      set({ to: { width: \"0%\", backgroundColor: \"hotpink\" }, immediate: true });\r\n    }\r\n  }, [pressed]);\r\n\r\n  return (\r\n    <button\r\n      className=\"main\"\r\n      onMouseDown={() => {\r\n        toggle(!pressed);\r\n      }}\r\n      onMouseUp={() => {\r\n        toggle(!pressed);\r\n      }}\r\n      onTouchStart={() => {\r\n        toggle(!pressed);\r\n      }}\r\n      onTouchEnd={() => {\r\n        toggle(!pressed);\r\n      }}\r\n    >\r\n      <animated.div\r\n        className=\"fill\"\r\n        style={{\r\n          width: props.width,\r\n          background: props.backgroundColor,\r\n        }}\r\n      />\r\n      <animated.div className=\"content\">\r\n        {props.width.interpolate((x) => {\r\n          setWidth(parseInt(x));\r\n          return x === \"0%\" ? \"Döndür!\" : parseInt(x) + \"%\";\r\n        })}\r\n      </animated.div>\r\n    </button>\r\n  );\r\n};\r\n\r\nfunction getWinner() {\r\n  const elements = document.getElementsByClassName(\"textstyle2\");\r\n  let minY = 3000;\r\n  let elem = -1;\r\n  for (let i = 0; i < elements.length; i++) {\r\n    if (elements[i].getBoundingClientRect().y < minY) {\r\n      minY = elements[i].getBoundingClientRect().y;\r\n      elem = i;\r\n    }\r\n  }\r\n  toast.success(\"Bugünün şanslı içeceği: \" + elements[elem].innerHTML.substring(0, elements[elem].innerHTML.lastIndexOf(\" \")) + \"!\");\r\n}\r\n\r\nexport default App;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport \"../App.css\";\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport parse from 'html-react-parser';\r\n\r\n\r\nvar storage = window.localStorage;\r\n\r\nconst DEFAULT = \"default_list\";\r\nlet x = 0;\r\nlet checkBoxes = [false, false, false];\r\nlet checkList = [\"şerbet\", \"süt\", \"çikolata\"];\r\n\r\nlet maksimumYemek = 4;\r\nlet f = 0;\r\nlet k = 0;\r\nlet transformString = \"\";\r\nlet rotating = false;\r\nlet first = false;\r\n// const red = \"#BA181B\";\r\nconst red = \"#000000\";\r\nconst triangle = \"#2C302E\"\r\nconst wheel = \"#FFFFFF\"\r\nconst fieldcolor = \"#D3D3D3\"\r\n\r\n\r\nlet default_list =  [\r\n \r\n];\r\n\r\nconst OFFSET = Math.random();\r\n\r\nconst map = function (value, in_min, in_max, out_min, out_max) {\r\n  if (value === 0) {\r\n    return out_min;\r\n  }\r\n  return ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\r\n};\r\n\r\nfunction App() {\r\n  const r = 200;\r\n  const cx = 250;\r\n  const cy = 250;\r\n  const [list, setList] = useState(default_list);\r\n  setInterval(() => {\r\n    const elements = document.getElementsByClassName(\"wheel\");\r\n    const st = window.getComputedStyle(elements[0], null);\r\n    if (!first) {\r\n      transformString = st.getPropertyValue(\"transform\");\r\n      first = true;\r\n    }\r\n    else {\r\n\r\n      if (transformString != st.getPropertyValue(\"transform\")) {\r\n        console.log(\"1\")\r\n        f = 0;\r\n        rotating = true;\r\n        transformString = st.getPropertyValue(\"transform\");\r\n        k = 0;\r\n      }\r\n      else {\r\n        if (rotating && transformString == st.getPropertyValue(\"transform\")) {\r\n          rotating = false;\r\n          f = 1;\r\n          console.log(\"2\")\r\n          // getWinner();\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n  }, 400);\r\n\r\n  setInterval(() => {\r\n    if (!rotating && f == 1) {\r\n      k = k + 1;\r\n    }\r\n    else if (f == 0) {\r\n      k = 0;\r\n    }\r\n    if (k == 10) {\r\n      getWinner();\r\n      f = 0;\r\n    }\r\n  }, 400)\r\n\r\n  if (x == 0) {\r\n    const params = { filters: \"şerbet-süt-çikolata\", count: maksimumYemek + \"\" };\r\n    axios.post('http://172.105.247.10:8080/filterstatli', params)\r\n      .then(function (response) {\r\n\r\n        default_list = response.data.toString().split(\"/\");\r\n        setList(default_list);\r\n        x = 1;\r\n      });\r\n  }\r\n  const [power, setPower] = useState(0);\r\n  const [acc, setAcc] = useState(0);\r\n  const config = { mass: 50, tension: 200, friction: 200, precision: 0.001 };\r\n  const [props, set] = useSpring(() => ({\r\n    transform: \"rotate(0deg)\",\r\n    immediate: false,\r\n  }));\r\n\r\n  useEffect(() => {\r\n\r\n  }, [props])\r\n\r\n  useEffect(() => {\r\n\r\n    set({\r\n      from: { transform: `rotate(${map(acc, 0, 100, 0, 1700)}deg)` },\r\n      transform: `rotate(${map(acc + power, 0, 100, 0, 1700)}deg)`,\r\n      immediate: false,\r\n      config,\r\n    });\r\n    setAcc(acc + power);\r\n  }, [power]);\r\n\r\n  const rederItems = (numOfItems) => {\r\n    let items = [];\r\n    for (let i = 0; i < numOfItems; i++) {\r\n      let xLength = Math.cos(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\r\n      let yLength = Math.sin(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\r\n      let txLength =\r\n        Math.cos(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\r\n      let tyLength =\r\n        Math.sin(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\r\n      let divs = \"\";\r\n\r\n      for (let k = list[i].length; k < 21; k++) {\r\n        divs += \"&ensp;\"\r\n      }\r\n      items.push(\r\n        <Fragment key={i}>\r\n          <line\r\n            stroke={red}\r\n            strokeWidth=\"2\"\r\n            x1={cx + xLength}\r\n            y1={cy + yLength}\r\n            x2={cx}\r\n            y2={cy}\r\n          />\r\n          <text\r\n            className=\"textstyle2\"\r\n            x={cx + txLength - 70}\r\n            y={cy + tyLength}\r\n            fontSize=\"15px\"\r\n            transform={`rotate(${((i + 0.5) / numOfItems + OFFSET) * 360} \r\n                  ${cx + txLength},\r\n                  ${cy + tyLength})`}\r\n          >\r\n            {list[i]} {parse(divs)}\r\n          </text>\r\n        </Fragment>\r\n      );\r\n    }\r\n    return items;\r\n  };\r\n\r\n  const boslukEkle = () => {\r\n    // &ensp;\r\n    return (<>&ensp;</>)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: \"grid\", gridTemplateColumns: \"0px 500px\", gridGap: 20 }}>\r\n\r\n        <fieldset>\r\n          <legend className=\"textstyle\"> Filtreler </legend>\r\n          <fieldset>\r\n            <legend className=\"textstyle\"> İçerikler </legend>\r\n            <div className=\"textstyle\"></div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek1\" name=\"ingredient1\" value=\"yemek1\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[0] = !checkBoxes[0];\r\n                if (checkBoxes[0]) {\r\n                  checkList[0] = \"\";\r\n                }\r\n                else {\r\n                  checkList[0] = \"şerbet\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek1\">Şerbet</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek2\" name=\"ingredient2\" value=\"yemek2\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[1] = !checkBoxes[1];\r\n                if (checkBoxes[1]) {\r\n                  checkList[1] = \"\";\r\n                }\r\n                else {\r\n                  checkList[1] = \"süt\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek2\">Süt</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek3\" name=\"ingredient3\" value=\"yemek3\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[2] = !checkBoxes[2];\r\n                if (checkBoxes[2]) {\r\n                  checkList[2] = \"\";\r\n                }\r\n                else {\r\n                  checkList[2] = \"çikolata\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek3\">Çikolata</label>\r\n            </div>\r\n            \r\n          </fieldset>\r\n          <div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div>\r\n          <div>\r\n            <label id=\"discrete-slider-small-steps\" className=\"textstyle\">\r\n              Maksimum Tatlı Miktarı\r\n            </label>\r\n            <Slider\r\n              onChange={(e, val) => {\r\n                maksimumYemek = val;\r\n              }}\r\n\r\n              defaultValue={4}\r\n              getAriaValueText={\"\"}\r\n              aria-labelledby=\"discrete-slider-small-steps\"\r\n              step={1}\r\n              marks\r\n              min={2}\r\n              max={12}\r\n              valueLabelDisplay=\"auto\"\r\n            />\r\n          </div>\r\n\r\n          <button className=\"secondary\" onClick={() => {\r\n            let filter = \"\";\r\n            for (let i = 0; i < checkList.length; i++) {\r\n              if (!checkBoxes[i])\r\n                filter += checkList[i] + \"-\";\r\n            }\r\n            const params = { filters: filter, count: maksimumYemek + \"\" };\r\n            axios.post('http://172.105.247.10:8080/filterstatli', params)\r\n              .then(function (response) {\r\n                if (response.data == \"\") {\r\n                  toast.error(\"Filtrelerinizle eşleşen yemek bulunamadı!\");\r\n                }\r\n                else {\r\n                  default_list = response.data.toString().split(\"/\");\r\n                }\r\n                setList(default_list);\r\n              });\r\n          }}>Yemekleri Yenile</button>\r\n          <PressButton setPower={setPower} style={{ height: \"20vh\" }} />\r\n        </fieldset>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 500 500\"\r\n          style={{ width: \"100vw\", height: \"80vh\" }}\r\n        >\r\n          <g fill={wheel} stroke={red} strokeWidth=\"10\">\r\n            <circle cx=\"250\" cy=\"250\" r={r} />\r\n          </g>\r\n          <animated.g\r\n            className={\"wheel\"}\r\n            style={{\r\n              transform: props.transform,\r\n              transformOrigin: \"center\",\r\n            }}\r\n          >\r\n            {rederItems(list.length)}\r\n          </animated.g>\r\n          <g fill={triangle} stroke={triangle} strokeWidth=\"2\">\r\n            <polygon points=\"250,70 230,30 270,30\" />\r\n          </g>\r\n        </svg>\r\n        <ToastContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst PressButton = ({ setPower }) => {\r\n  const [pressed, toggle] = useState(false);\r\n  const [width, setWidth] = useState(0);\r\n  const [props, set] = useSpring(() => ({\r\n    width: \"0%\",\r\n    backgroundColor: \"hotpink\",\r\n  }));\r\n  useEffect(() => {\r\n    if (pressed)\r\n      set({\r\n        from: { width: \"0%\", backgroundColor: \"hotpink\" },\r\n        to: { width: \"100%\", backgroundColor: \"red\" },\r\n        immediate: false,\r\n        config: { duration: 2000 },\r\n      });\r\n    else {\r\n      setPower(parseInt(width));\r\n      set({ to: { width: \"0%\", backgroundColor: \"hotpink\" }, immediate: true });\r\n    }\r\n  }, [pressed]);\r\n\r\n  return (\r\n    <button\r\n      className=\"main\"\r\n      onMouseDown={() => {\r\n        toggle(!pressed);\r\n      }}\r\n      onMouseUp={() => {\r\n        toggle(!pressed);\r\n      }}\r\n      onTouchStart={() => {\r\n        toggle(!pressed);\r\n      }}\r\n      onTouchEnd={() => {\r\n        toggle(!pressed);\r\n      }}\r\n    >\r\n      <animated.div\r\n        className=\"fill\"\r\n        style={{\r\n          width: props.width,\r\n          background: props.backgroundColor,\r\n        }}\r\n      />\r\n      <animated.div className=\"content\">\r\n        {props.width.interpolate((x) => {\r\n          setWidth(parseInt(x));\r\n          return x === \"0%\" ? \"Döndür!\" : parseInt(x) + \"%\";\r\n        })}\r\n      </animated.div>\r\n    </button>\r\n  );\r\n};\r\n\r\nfunction getWinner() {\r\n  const elements = document.getElementsByClassName(\"textstyle2\");\r\n  let minY = 3000;\r\n  let elem = -1;\r\n  for (let i = 0; i < elements.length; i++) {\r\n    if (elements[i].getBoundingClientRect().y < minY) {\r\n      minY = elements[i].getBoundingClientRect().y;\r\n      elem = i;\r\n    }\r\n  }\r\n  toast.success(\"Bugünün şanslı tatlısı: \" + elements[elem].innerHTML.substring(0, elements[elem].innerHTML.lastIndexOf(\" \")) + \"!\");\r\n}\r\n\r\nexport default App;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { animated, useSpring } from \"react-spring\";\r\nimport \"../App.css\";\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport parse from 'html-react-parser';\r\n\r\n\r\nvar storage = window.localStorage;\r\n\r\nconst DEFAULT = \"default_list\";\r\nlet x = 0;\r\nlet checkBoxes = [false, false, false, false, false, false];\r\nlet checkList = [\"et\", \"balık\", \"tavuk\", \"bulgur\", \"sosis\", \"kıyma\"];\r\n\r\nlet maksimumYemek = 4;\r\nlet f = 0;\r\nlet k = 0;\r\nlet transformString = \"\";\r\nlet rotating = false;\r\nlet first = false;\r\n// const red = \"#BA181B\";\r\nconst red = \"#000000\";\r\nconst triangle = \"#2C302E\"\r\nconst wheel = \"#FFFFFF\"\r\nconst fieldcolor = \"#D3D3D3\"\r\n\r\n\r\nlet default_list =  [\r\n\r\n];\r\n\r\nconst OFFSET = Math.random();\r\n\r\nconst map = function (value, in_min, in_max, out_min, out_max) {\r\n  if (value === 0) {\r\n    return out_min;\r\n  }\r\n  return ((value - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\r\n};\r\n\r\nfunction App() {\r\n  const r = 200;\r\n  const cx = 250;\r\n  const cy = 250;\r\n  const [list, setList] = useState(default_list);\r\n  setInterval(() => {\r\n    const elements = document.getElementsByClassName(\"wheel\");\r\n    const st = window.getComputedStyle(elements[0], null);\r\n    if (!first) {\r\n      transformString = st.getPropertyValue(\"transform\");\r\n      first = true;\r\n    }\r\n    else {\r\n\r\n      if (transformString != st.getPropertyValue(\"transform\")) {\r\n        console.log(\"1\")\r\n        f = 0;\r\n        rotating = true;\r\n        transformString = st.getPropertyValue(\"transform\");\r\n        k = 0;\r\n      }\r\n      else {\r\n        if (rotating && transformString == st.getPropertyValue(\"transform\")) {\r\n          rotating = false;\r\n          f = 1;\r\n          console.log(\"2\")\r\n          // getWinner();\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n  }, 400);\r\n\r\n  setInterval(() => {\r\n    if (!rotating && f == 1) {\r\n      k = k + 1;\r\n    }\r\n    else if (f == 0) {\r\n      k = 0;\r\n    }\r\n    if (k == 10) {\r\n      getWinner();\r\n      f = 0;\r\n    }\r\n  }, 400)\r\n\r\n  if (x == 0) {\r\n    const params = { filters: \"et-balık-tatlı-tavuk-bulgur-sosis-kıyma-\", count: maksimumYemek + \"\" };\r\n    axios.post('http://172.105.247.10:8080/filters', params)\r\n      .then(function (response) {\r\n\r\n        default_list = response.data.toString().split(\"/\");\r\n        setList(default_list);\r\n        x = 1;\r\n      });\r\n  }\r\n  const [power, setPower] = useState(0);\r\n  const [acc, setAcc] = useState(0);\r\n  const config = { mass: 50, tension: 200, friction: 200, precision: 0.001 };\r\n  const [props, set] = useSpring(() => ({\r\n    transform: \"rotate(0deg)\",\r\n    immediate: false,\r\n  }));\r\n\r\n  useEffect(() => {\r\n\r\n  }, [props])\r\n\r\n  useEffect(() => {\r\n\r\n    set({\r\n      from: { transform: `rotate(${map(acc, 0, 100, 0, 1700)}deg)` },\r\n      transform: `rotate(${map(acc + power, 0, 100, 0, 1700)}deg)`,\r\n      immediate: false,\r\n      config,\r\n    });\r\n    setAcc(acc + power);\r\n  }, [power]);\r\n\r\n  const rederItems = (numOfItems) => {\r\n    let items = [];\r\n    for (let i = 0; i < numOfItems; i++) {\r\n      let xLength = Math.cos(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\r\n      let yLength = Math.sin(2 * Math.PI * (i / numOfItems + OFFSET)) * (r - 5);\r\n      let txLength =\r\n        Math.cos(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\r\n      let tyLength =\r\n        Math.sin(2 * Math.PI * ((i + 0.5) / numOfItems + OFFSET)) * (r / 2);\r\n      let divs = \"\";\r\n\r\n      for (let k = list[i].length; k < 21; k++) {\r\n        divs += \"&ensp;\"\r\n      }\r\n      items.push(\r\n        <Fragment key={i}>\r\n          <line\r\n            stroke={red}\r\n            strokeWidth=\"2\"\r\n            x1={cx + xLength}\r\n            y1={cy + yLength}\r\n            x2={cx}\r\n            y2={cy}\r\n          />\r\n          <text\r\n            className=\"textstyle2\"\r\n            x={cx + txLength - 70}\r\n            y={cy + tyLength}\r\n            fontSize=\"15px\"\r\n            transform={`rotate(${((i + 0.5) / numOfItems + OFFSET) * 360} \r\n                  ${cx + txLength},\r\n                  ${cy + tyLength})`}\r\n          >\r\n            {list[i]} {parse(divs)}\r\n          </text>\r\n        </Fragment>\r\n      );\r\n    }\r\n    return items;\r\n  };\r\n\r\n  const boslukEkle = () => {\r\n    // &ensp;\r\n    return (<>&ensp;</>)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <div style={{ display: \"grid\", gridTemplateColumns: \"0px 500px\", gridGap: 20 }}>\r\n\r\n        <fieldset>\r\n          <legend className=\"textstyle\"> Filtreler </legend>\r\n          <fieldset>\r\n            <legend className=\"textstyle\"> İçerikler </legend>\r\n            <div className=\"textstyle\"></div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek1\" name=\"ingredient1\" value=\"yemek1\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[0] = !checkBoxes[0];\r\n                if (checkBoxes[0]) {\r\n                  checkList[0] = \"\";\r\n                }\r\n                else {\r\n                  checkList[0] = \"et\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek1\">Et</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek2\" name=\"ingredient2\" value=\"yemek2\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[1] = !checkBoxes[1];\r\n                if (checkBoxes[1]) {\r\n                  checkList[1] = \"\";\r\n                }\r\n                else {\r\n                  checkList[1] = \"balık\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek2\">Balık</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek3\" name=\"ingredient3\" value=\"yemek3\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[2] = !checkBoxes[2];\r\n                if (checkBoxes[2]) {\r\n                  checkList[2] = \"\";\r\n                }\r\n                else {\r\n                  checkList[2] = \"tavuk\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek3\">Tavuk</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek3\" name=\"ingredient3\" value=\"yemek3\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[3] = !checkBoxes[3];\r\n                if (checkBoxes[3]) {\r\n                  checkList[3] = \"\";\r\n                }\r\n                else {\r\n                  checkList[3] = \"bulgur\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek3\">Bulgur</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek4\" name=\"ingredient4\" value=\"yemek4\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[4] = !checkBoxes[4];\r\n                if (checkBoxes[4]) {\r\n                  checkList[4] = \"\";\r\n                }\r\n                else {\r\n                  checkList[4] = \"sosis\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek4\" title=\"Sosis / Sucuk / Salam\">3s</label>\r\n            </div>\r\n            <div>\r\n              <input type=\"checkbox\" id=\"yemek5\" name=\"ingredient5\" value=\"yemek5\" defaultChecked={true} onChange={() => {\r\n                checkBoxes[5] = !checkBoxes[5];\r\n                if (checkBoxes[5]) {\r\n                  checkList[5] = \"\";\r\n                }\r\n                else {\r\n                  checkList[5] = \"kıyma\";\r\n                }\r\n              }} />\r\n              <label className=\"textstyle\" for=\"yemek5\">Kıyma</label>\r\n            </div>\r\n\r\n          </fieldset>\r\n          <div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div><div>&ensp;</div>\r\n          <div>\r\n            <label id=\"discrete-slider-small-steps\" className=\"textstyle\">\r\n              Maksimum Yemek Miktarı\r\n            </label>\r\n            <Slider\r\n              onChange={(e, val) => {\r\n                maksimumYemek = val;\r\n              }}\r\n\r\n              defaultValue={4}\r\n              getAriaValueText={\"\"}\r\n              aria-labelledby=\"discrete-slider-small-steps\"\r\n              step={1}\r\n              marks\r\n              min={2}\r\n              max={12}\r\n              valueLabelDisplay=\"auto\"\r\n            />\r\n          </div>\r\n\r\n          <button className=\"secondary\" onClick={() => {\r\n            let filter = \"\";\r\n            for (let i = 0; i < checkList.length; i++) {\r\n              if (!checkBoxes[i])\r\n                filter += checkList[i] + \"-\";\r\n            }\r\n            const params = { filters: filter, count: maksimumYemek + \"\" };\r\n            axios.post('http://172.105.247.10:8080/filters', params)\r\n              .then(function (response) {\r\n                if (response.data == \"\") {\r\n                  toast.error(\"Filtrelerinizle eşleşen yemek bulunamadı!\");\r\n                }\r\n                else {\r\n                  default_list = response.data.toString().split(\"/\");\r\n                }\r\n                setList(default_list);\r\n              });\r\n          }}>Yemekleri Yenile</button>\r\n          <PressButton setPower={setPower} style={{ height: \"20vh\" }} />\r\n        </fieldset>\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          viewBox=\"0 0 500 500\"\r\n          style={{ width: \"100vw\", height: \"80vh\" }}\r\n        >\r\n          <g fill={wheel} stroke={red} strokeWidth=\"10\">\r\n            <circle cx=\"250\" cy=\"250\" r={r} />\r\n          </g>\r\n          <animated.g\r\n            className={\"wheel\"}\r\n            style={{\r\n              transform: props.transform,\r\n              transformOrigin: \"center\",\r\n            }}\r\n          >\r\n            {rederItems(list.length)}\r\n          </animated.g>\r\n          <g fill={triangle} stroke={triangle} strokeWidth=\"2\">\r\n            <polygon points=\"250,70 230,30 270,30\" />\r\n          </g>\r\n        </svg>\r\n        <ToastContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst PressButton = ({ setPower }) => {\r\n  const [pressed, toggle] = useState(false);\r\n  const [width, setWidth] = useState(0);\r\n  const [props, set] = useSpring(() => ({\r\n    width: \"0%\",\r\n    backgroundColor: \"hotpink\",\r\n  }));\r\n  useEffect(() => {\r\n    if (pressed)\r\n      set({\r\n        from: { width: \"0%\", backgroundColor: \"hotpink\" },\r\n        to: { width: \"100%\", backgroundColor: \"red\" },\r\n        immediate: false,\r\n        config: { duration: 2000 },\r\n      });\r\n    else {\r\n      setPower(parseInt(width));\r\n      set({ to: { width: \"0%\", backgroundColor: \"hotpink\" }, immediate: true });\r\n    }\r\n  }, [pressed]);\r\n\r\n  return (\r\n    <button\r\n      className=\"main\"\r\n      onMouseDown={() => {\r\n        toggle(!pressed);\r\n      }}\r\n      onMouseUp={() => {\r\n        toggle(!pressed);\r\n      }}\r\n      onTouchStart={() => {\r\n        toggle(!pressed);\r\n      }}\r\n      onTouchEnd={() => {\r\n        toggle(!pressed);\r\n      }}\r\n    >\r\n      <animated.div\r\n        className=\"fill\"\r\n        style={{\r\n          width: props.width,\r\n          background: props.backgroundColor,\r\n        }}\r\n      />\r\n      <animated.div className=\"content\">\r\n        {props.width.interpolate((x) => {\r\n          setWidth(parseInt(x));\r\n          return x === \"0%\" ? \"Döndür!\" : parseInt(x) + \"%\";\r\n        })}\r\n      </animated.div>\r\n    </button>\r\n  );\r\n};\r\n\r\nfunction getWinner() {\r\n  const elements = document.getElementsByClassName(\"textstyle2\");\r\n  let minY = 3000;\r\n  let elem = -1;\r\n  for (let i = 0; i < elements.length; i++) {\r\n    if (elements[i].getBoundingClientRect().y < minY) {\r\n      minY = elements[i].getBoundingClientRect().y;\r\n      elem = i;\r\n    }\r\n  }\r\n  toast.success(\"Bugünün şanslı yemeği: \" + elements[elem].innerHTML.substring(0, elements[elem].innerHTML.lastIndexOf(\" \")) + \"!\");\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Slide } from 'react-slideshow-image';\r\nimport 'react-slideshow-image/dist/styles.css'\r\nimport \"../App.css\";\r\n\r\nconst slideImages = [\r\n  'https://i.hizliresim.com/g1m0hvi.jpg',\r\n  'https://i.hizliresim.com/pqg0quj.jpg',\r\n  'https://i.hizliresim.com/as0dkb0.jpg'\r\n];\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"slide-container\">\r\n        <Slide>\r\n          <div className=\"each-slide\">\r\n            <div style={{'backgroundImage': `url(${slideImages[0]})`, height: \"650px\", offset: \"100px\"}}>\r\n            </div>\r\n          </div>\r\n          <div className=\"each-slide\">\r\n            <div style={{'backgroundImage': `url(${slideImages[1]})`, height: \"650px\"}}>\r\n            </div>\r\n          </div>\r\n          <div className=\"each-slide\">\r\n            <div style={{'backgroundImage': `url(${slideImages[2]})` ,height: \"650px\"}}>\r\n            </div>\r\n          </div>\r\n        </Slide>\r\n        <div>&ensp;</div><div>&ensp;</div>\r\n        <div>\r\n            <a><a href=\"/yemek\"><button className=\"button1\">Yemekler</button></a>&ensp;&ensp;&ensp;\r\n            <a href=\"/tatli\"><button className=\"button1\">Tatlılar</button></a>&ensp;&ensp;&ensp;<a href=\"/icecek\"><button className=\"button1\">İçecekler</button></a></a>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport \"../support.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <div>&ensp;</div><div>&ensp;</div>\r\n            <header className=\"navbarheader\">Herhangi bir hatayla karşılaştığınızda veya önerilerinizi paylaşmak amacıyla bize ulaşmak için <b>dogukanterzi@gmail.com</b> <br></br> adresine mail atabilir ya da aşağıdaki alanı kullanarak bize mesaj gönderebilirsiniz!</header>\r\n            <div>&ensp;</div><div>&ensp;</div>\r\n            <textarea placeholder=\"İsminiz\" id=\"textAreaID2\" style={{ width: \"300px\", height: \"20px\" }}>\r\n            </textarea>\r\n            <div>&ensp;</div>\r\n            <textarea placeholder=\"Geri Bildiriminiz\" id=\"textAreaID\" style={{ width: \"300px\", height: \"300px\" }}>\r\n            </textarea>\r\n            <div>&ensp;</div><div>&ensp;</div>\r\n            <button className=\"gonderbutton\" onClick={buttonClickEvent}>Gönder!</button>\r\n            <div>&ensp;</div><div>&ensp;</div>\r\n            <div>&ensp;</div><div>&ensp;</div>\r\n            <header className=\"navbarheader\">Referanslar</header>\r\n            <div>&ensp;</div>\r\n            Seçim tekerleği:\r\n            <div></div>\r\n            F. Frankie. (2020, July 19). Make a lucky wheel to solve your lunch dilemma by using react and react-spring. Medium. https://frankie95.medium.com/make-a-lucky-wheel-to-solve-your-lunch-dilemma-by-using-react-and-react-spring-29b611a5aaed\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst buttonClickEvent = () => {\r\n    const innerText = document.getElementById(\"textAreaID\").value;\r\n    const name = document.getElementById(\"textAreaID2\").value;\r\n    if (innerText.length == 0) {\r\n        toast.warning(\"Lütfen alana geri bildiriminizi yazdıktan sonra \\\"Gönder\\\" tuşuna basınız.\");\r\n    }\r\n    else {\r\n        toast.success(\"Geri bildiriminiz için teşekkür ederiz!\");\r\n        const params = { filters: \"name: \" + name + \" feedback: \" + innerText};\r\n        axios.post('http://localhost:8080/geribildirim', params)\r\n            .then(function (response) {\r\n            });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Switch, Route, HashRouter } from 'react-router-dom';\r\n\r\nimport Icecek from './pages/icecek';\r\nimport Tatli from './pages/tatli';\r\nimport Yemek from './pages/yemek';\r\nimport Home from './pages/anasayfa';\r\nimport support from './pages/support';\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Switch> {/* The Switch decides which component to show based on the current URL.*/}\r\n      <Route exact path='/' component={Home}></Route>\r\n      <Route exact path='/yemek' component={Yemek}></Route>\r\n      <Route exact path='/tatli' component={Tatli}></Route>\r\n      <Route exact path='/icecek' component={Icecek}></Route>\r\n      <Route exact path='/support' component={support}></Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Main;","import React from \"react\";\nimport \"./App.css\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport NavBar from 'react-responsive-menubar/lib/NavBar';\n\nimport Main from './Main';\n\nfunction App() {\n\n  \n\n  return (\n    <div className=\"App\">\n      <header className=\"header\" style={{backgroundColor: \"white\"}}>\n          <NavBar \n          logo={'https://i.hizliresim.com/7gzlw62.jpg'} \n          showSideNav={false} \n          logoStyles={{  height:\"0px\", width:\"0px\"}} \n          navBarStyles={{float: \"middle\"}} \n          linkStyles={{color:\"blue\", fontWeight:\"bold\",}}>\n \n              <a className=\"navbarheader\" href=\"/\" ><img src='https://icons.iconarchive.com/icons/martin-berube/food/256/pie-icon.png' style={{height:\"50px\", width:\"50px\"}}></img></a>\n              <a className=\"navbarheader\" href=\"/yemek\">Yemekler</a>\n              <a className=\"navbarheader\" href=\"/tatli\">Tatlılar</a>\n              <a className=\"navbarheader\" href=\"/icecek\">İçecekler</a>\n              <a className=\"navbarheader\" href=\"/support\">İletişim</a>\n              <a className=\"navbarheader\" href=\"/icecek\"></a>\n \n          </NavBar>\n      </header>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App /> {/* The various pages will be displayed by the `Main` component. */}\n  </BrowserRouter>\n  ), document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}